#include "RANSAC.h"
#include "assert.h"
#include <iostream>
#include <fstream>
#include <iomanip>
#include "stdlib.h"
#include "stdio.h"
#include "assert.h"
#include "float.h"
#include "math.h"
#include <string>
#include "string.h"
#include <vector>
#include "opencv.h"
#include "time.h"
#define Nodata -999999999
#define Inf 999999999
using namespace std;
int RANSAC_TWISTER_STATE_UPDATED = Nodata;//Ä¬ÈÏÁãÊ±Îª¿Õ
int RANSAC_TWISTER_STATE = Nodata;
typedef struct tagPoint2D
{
    double X;
    double Y;
} Pt2d;
typedef struct tagPoint2i
{
    int X;
    int Y;
} Pt2i;
typedef struct tagMatchPoints
{
    Pt2d Lpt;
    Pt2d Rpt;
    double dcoef;
} MatchPts;
typedef struct tagMatrixA
{
    double a1;
    double a2;
    double a3;
    double a4;
    tagMatrixA()
    {
        a1 = a2 = a3 = a4 = 0;
    }
} matA;
typedef struct tagxLUT
{
    double x[8];
} xLUT;
enum RanMode { RANSAC, MSAC };
typedef struct tagRansacOptions
{
    double epsilon;
    double P_inlier;
    double sigma;
    bool best_fun;
    bool bman_fun;
    RanMode mode;
    vector<double> Ps;
    vector<int> notify_iter;
    int min_iters;
    bool fix_seed;
    bool reestimate;
    bool stabilize;
    bool bvalidateMSS_fun;
    bool bvalidateTheta_fun;
    vector<int> ind_tabu;
    int max_iters;
    int max_no_updates;
    bool verbose;
    int  notify_iters;
    double T_noise_squared;
    tagRansacOptions()
    {
        epsilon = 1e-3;
        P_inlier = 1-1e-4;
        sigma = 1;
        best_fun = true;
        bman_fun = true;
        mode = RANSAC;
        min_iters = 1000;//0
        fix_seed = false;
        reestimate = false;
        stabilize = false;
        bvalidateMSS_fun = false;
        bvalidateTheta_fun = false;
        max_iters = Inf;
        max_no_updates = Inf;
        verbose = true;
        notify_iters = 0;//[]
        T_noise_squared = -1;
    }
} RanOps;
typedef struct tagRanResults
{
    vector<double> Theta;//estimated parameter vector
    vector<double> E;//fitting error obtained from man_fun
    vector<bool> CS;//consensus set (true -> inliers, false -> outliers)
    double J;//cost of the solution
    int iter;//number of iterations
    double time;//time to perform the computation
    double T_noise_squared;
} RanRes;
//////////////////////////////////////////////////////////
double dP_LUT[512] = { 0.5000000000000000,0.5009784735812130,0.5019569471624270,0.5029354207436400,0.5039138943248530,0.5048923679060670,0.5058708414872800,0.5068493150684930,
0.5078277886497070,0.5088062622309200,0.5097847358121330,0.5107632093933460,0.5117416829745600,0.5127201565557730,0.5136986301369860,0.5146771037182000,
0.5156555772994130,0.5166340508806260,0.5176125244618400,0.5185909980430530,0.5195694716242660,0.5205479452054790,0.5215264187866930,0.5225048923679060,
0.5234833659491190,0.5244618395303330,0.5254403131115460,0.5264187866927590,0.5273972602739731,0.5283757338551860,0.5293542074363991,0.5303326810176130,
0.5313111545988261,0.5322896281800390,0.5332681017612519,0.5342465753424660,0.5352250489236790,0.5362035225048920,0.5371819960861060,0.5381604696673190,
0.5391389432485320,0.5401174168297460,0.5410958904109590,0.5420743639921720,0.5430528375733860,0.5440313111545990,0.5450097847358120,0.5459882583170260,
0.5469667318982390,0.5479452054794520,0.5489236790606650,0.5499021526418790,0.5508806262230920,0.5518590998043050,0.5528375733855190,0.5538160469667320,
0.5547945205479450,0.5557729941291590,0.5567514677103720,0.5577299412915850,0.5587084148727980,0.5596868884540120,0.5606653620352250,0.5616438356164381,
0.5626223091976520,0.5636007827788651,0.5645792563600780,0.5655577299412921,0.5665362035225050,0.5675146771037180,0.5684931506849310,0.5694716242661450,
0.5704500978473580,0.5714285714285710,0.5724070450097850,0.5733855185909980,0.5743639921722110,0.5753424657534250,0.5763209393346380,0.5772994129158510,
0.5782778864970650,0.5792563600782780,0.5802348336594910,0.5812133072407040,0.5821917808219180,0.5831702544031310,0.5841487279843440,0.5851272015655580,
0.5861056751467710,0.5870841487279840,0.5880626223091980,0.5890410958904110,0.5900195694716240,0.5909980430528380,0.5919765166340510,0.5929549902152640,
0.5939334637964781,0.5949119373776910,0.5958904109589041,0.5968688845401170,0.5978473581213311,0.5988258317025440,0.5998043052837571,0.6007827788649710,
0.6017612524461840,0.6027397260273970,0.6037181996086110,0.6046966731898240,0.6056751467710370,0.6066536203522510,0.6076320939334640,0.6086105675146770,
0.6095890410958900,0.6105675146771040,0.6115459882583170,0.6125244618395300,0.6135029354207440,0.6144814090019570,0.6154598825831700,0.6164383561643840,
0.6174168297455970,0.6183953033268100,0.6193737769080230,0.6203522504892370,0.6213307240704500,0.6223091976516630,0.6232876712328770,0.6242661448140900,
0.6252446183953030,0.6262230919765170,0.6272015655577300,0.6281800391389431,0.6291585127201560,0.6301369863013701,0.6311154598825830,0.6320939334637961,
0.6330724070450100,0.6340508806262230,0.6350293542074360,0.6360078277886500,0.6369863013698630,0.6379647749510760,0.6389432485322900,0.6399217221135030,
0.6409001956947160,0.6418786692759300,0.6428571428571430,0.6438356164383560,0.6448140900195690,0.6457925636007830,0.6467710371819960,0.6477495107632090,
0.6487279843444230,0.6497064579256360,0.6506849315068490,0.6516634050880630,0.6526418786692760,0.6536203522504890,0.6545988258317030,0.6555772994129160,
0.6565557729941290,0.6575342465753420,0.6585127201565560,0.6594911937377690,0.6604696673189821,0.6614481409001960,0.6624266144814091,0.6634050880626220,
0.6643835616438361,0.6653620352250490,0.6663405088062621,0.6673189823874750,0.6682974559686890,0.6692759295499020,0.6702544031311150,0.6712328767123290,
0.6722113502935420,0.6731898238747550,0.6741682974559690,0.6751467710371820,0.6761252446183950,0.6771037181996090,0.6780821917808220,0.6790606653620350,
0.6800391389432480,0.6810176125244620,0.6819960861056750,0.6829745596868880,0.6839530332681020,0.6849315068493150,0.6859099804305280,0.6868884540117420,
0.6878669275929550,0.6888454011741680,0.6898238747553820,0.6908023483365950,0.6917808219178080,0.6927592954990210,0.6937377690802350,0.6947162426614481,
0.6956947162426610,0.6966731898238751,0.6976516634050880,0.6986301369863011,0.6996086105675150,0.7005870841487280,0.7015655577299410,0.7025440313111550,
0.7035225048923680,0.7045009784735810,0.7054794520547950,0.7064579256360080,0.7074363992172210,0.7084148727984340,0.7093933463796480,0.7103718199608610,
0.7113502935420740,0.7123287671232880,0.7133072407045010,0.7142857142857140,0.7152641878669280,0.7162426614481410,0.7172211350293540,0.7181996086105670,
0.7191780821917810,0.7201565557729940,0.7211350293542070,0.7221135029354210,0.7230919765166340,0.7240704500978470,0.7250489236790610,0.7260273972602740,
0.7270058708414871,0.7279843444227000,0.7289628180039141,0.7299412915851270,0.7309197651663401,0.7318982387475540,0.7328767123287671,0.7338551859099800,
0.7348336594911940,0.7358121330724070,0.7367906066536200,0.7377690802348340,0.7387475538160470,0.7397260273972600,0.7407045009784730,0.7416829745596870,
0.7426614481409000,0.7436399217221130,0.7446183953033270,0.7455968688845400,0.7465753424657530,0.7475538160469670,0.7485322896281800,0.7495107632093930,
0.7504892367906070,0.7514677103718200,0.7524461839530330,0.7534246575342470,0.7544031311154600,0.7553816046966730,0.7563600782778860,0.7573385518591000,
0.7583170254403130,0.7592954990215260,0.7602739726027400,0.7612524461839531,0.7622309197651660,0.7632093933463801,0.7641878669275930,0.7651663405088061,
0.7661448140900190,0.7671232876712330,0.7681017612524460,0.7690802348336590,0.7700587084148730,0.7710371819960860,0.7720156555772990,0.7729941291585130,
0.7739726027397260,0.7749510763209390,0.7759295499021530,0.7769080234833660,0.7778864970645790,0.7788649706457920,0.7798434442270060,0.7808219178082190,
0.7818003913894320,0.7827788649706460,0.7837573385518590,0.7847358121330720,0.7857142857142860,0.7866927592954990,0.7876712328767120,0.7886497064579260,
0.7896281800391390,0.7906066536203520,0.7915851272015660,0.7925636007827790,0.7935420743639920,0.7945205479452050,0.7954990215264191,0.7964774951076320,
0.7974559686888451,0.7984344422700590,0.7994129158512721,0.8003913894324850,0.8013698630136990,0.8023483365949120,0.8033268101761250,0.8043052837573390,
0.8052837573385520,0.8062622309197650,0.8072407045009780,0.8082191780821920,0.8091976516634050,0.8101761252446180,0.8111545988258320,0.8121330724070450,
0.8131115459882580,0.8140900195694720,0.8150684931506850,0.8160469667318980,0.8170254403131110,0.8180039138943250,0.8189823874755380,0.8199608610567510,
0.8209393346379650,0.8219178082191780,0.8228962818003910,0.8238747553816050,0.8248532289628180,0.8258317025440310,0.8268101761252440,0.8277886497064581,
0.8287671232876710,0.8297455968688841,0.8307240704500980,0.8317025440313111,0.8326810176125240,0.8336594911937379,0.8346379647749510,0.8356164383561640,
0.8365949119373780,0.8375733855185910,0.8385518590998040,0.8395303326810180,0.8405088062622310,0.8414872798434440,0.8424657534246570,0.8434442270058710,
0.8444227005870840,0.8454011741682970,0.8463796477495110,0.8473581213307240,0.8483365949119370,0.8493150684931510,0.8502935420743640,0.8512720156555770,
0.8522504892367900,0.8532289628180040,0.8542074363992170,0.8551859099804300,0.8561643835616440,0.8571428571428570,0.8581213307240700,0.8590998043052840,
0.8600782778864970,0.8610567514677100,0.8620352250489241,0.8630136986301370,0.8639921722113501,0.8649706457925630,0.8659491193737771,0.8669275929549900,
0.8679060665362030,0.8688845401174170,0.8698630136986300,0.8708414872798430,0.8718199608610570,0.8727984344422700,0.8737769080234830,0.8747553816046970,
0.8757338551859100,0.8767123287671230,0.8776908023483360,0.8786692759295500,0.8796477495107630,0.8806262230919760,0.8816046966731900,0.8825831702544030,
0.8835616438356160,0.8845401174168300,0.8855185909980430,0.8864970645792560,0.8874755381604700,0.8884540117416830,0.8894324853228960,0.8904109589041090,
0.8913894324853230,0.8923679060665360,0.8933463796477490,0.8943248532289631,0.8953033268101760,0.8962818003913891,0.8972602739726030,0.8982387475538161,
0.8992172211350290,0.9001956947162429,0.9011741682974560,0.9021526418786690,0.9031311154598820,0.9041095890410960,0.9050880626223090,0.9060665362035220,
0.9070450097847360,0.9080234833659490,0.9090019569471620,0.9099804305283760,0.9109589041095890,0.9119373776908020,0.9129158512720160,0.9138943248532290,
0.9148727984344420,0.9158512720156550,0.9168297455968690,0.9178082191780820,0.9187866927592950,0.9197651663405090,0.9207436399217220,0.9217221135029350,
0.9227005870841490,0.9236790606653620,0.9246575342465750,0.9256360078277890,0.9266144814090020,0.9275929549902150,0.9285714285714281,0.9295499021526420,
0.9305283757338551,0.9315068493150680,0.9324853228962821,0.9334637964774950,0.9344422700587080,0.9354207436399220,0.9363992172211350,0.9373776908023480,
0.9383561643835610,0.9393346379647750,0.9403131115459880,0.9412915851272010,0.9422700587084150,0.9432485322896280,0.9442270058708410,0.9452054794520550,
0.9461839530332680,0.9471624266144810,0.9481409001956940,0.9491193737769080,0.9500978473581210,0.9510763209393350,0.9520547945205480,0.9530332681017610,
0.9540117416829740,0.9549902152641880,0.9559686888454010,0.9569471624266140,0.9579256360078280,0.9589041095890410,0.9598825831702540,0.9608610567514681,
0.9618395303326810,0.9628180039138941,0.9637964774951070,0.9647749510763211,0.9657534246575340,0.9667318982387470,0.9677103718199610,0.9686888454011740,
0.9696673189823870,0.9706457925636010,0.9716242661448140,0.9726027397260270,0.9735812133072410,0.9745596868884540,0.9755381604696670,0.9765166340508800,
0.9774951076320940,0.9784735812133070,0.9794520547945200,0.9804305283757340,0.9814090019569470,0.9823874755381600,0.9833659491193740,0.9843444227005870,
0.9853228962818000,0.9863013698630130,0.9872798434442270,0.9882583170254400,0.9892367906066530,0.9902152641878670,0.9911937377690800,0.9921722113502930,
0.9931506849315070,0.9941291585127200,0.9951076320939331,0.9960861056751470,0.9970645792563601,0.9980430528375730,0.9990215264187871,1.0000000000000000};

double dX_LUT[512][8] = {   { 0.4549364231195720,  1.3862943611198899,  2.3659738843753400,  3.3566939800333202,  4.3514601910955300,  5.3481206274471198,  6.3458111955215202,  7.3441214977018001 } ,
  0.4570167135298850,  1.3902120900905599,  2.3711825370632900,  3.3629438166546399,  4.3586044391040204,  5.3560605074802803,  6.3544745808207201,  7.3534528000059698  ,
  0.4591039253290120,  1.3941375084262499,  2.3763990458280402,  3.3692015785833100,  4.3657566507688497,  5.3640083760690098,  6.3631459725274198,  7.3627921224043797  ,
  0.4611980829142750,  1.3980706463703401,  2.3816234470375601,  3.3754673076275199,  4.3729168727691796,  5.3719642843252204,  6.3718254258425802,  7.3721395239102296  ,
  0.4632992108362750,  1.4020115343449300,  2.3868557772460202,  3.3817410457850898,  4.3800851519758197,  5.3799282835538298,  6.3805129961612499,  7.3814950637316201  ,
  0.4654073338001040,  1.4059602029523699,  2.3920960731954399,  3.3880228352453199,  4.3872615354532902,  5.3879004252550500,  6.3892087390749497,  7.3908588012740903  ,
  0.4675224766665540,  1.4099166829765799,  2.3973443718173200,  3.3943127183908599,  4.3944460704618802,  5.3958807611266399,  6.3979127103741300,  7.4002307961432399  ,
  0.4696446644533500,  1.4138810053845601,  2.4026007102343701,  3.4006107377996200,  4.4016388044597496,  5.4038693430661100,  6.4066249660505301,  7.4096111081472600  ,
  0.4717739223363880,  1.4178532013278200,  2.4078651257621200,  3.4069169362466698,  4.4088397851050498,  5.4118662231730799,  6.4153455622996800,  7.4189997972996000  ,
  0.4739102756509880,  1.4218333021438401,  2.4131376559107101,  3.4132313567061199,  4.4160490602579703,  5.4198714537515196,  6.4240745555233696,  7.4283969238215297  ,
  0.4760537498931610,  1.4258213393575701,  2.4184183383865401,  3.4195540423531199,  4.4232666779829497,  5.4278850873120899,  6.4328120023320903,  7.4378025481448402  ,
  0.4782043707208840,  1.4298173446829201,  2.4237072110940301,  3.4258850365657501,  4.4304926865507799,  5.4359071765744602,  6.4415579595475698,  7.4472167309144597  ,
  0.4803621639553950,  1.4338213500242600,  2.4290043121373701,  3.4322243829270298,  4.4377271344407596,  5.4439377744696698,  6.4503124842053001,  7.4566395329911099  ,
  0.4825271555824980,  1.4378333874779901,  2.4343096798222899,  3.4385721252268802,  4.4449700703429302,  5.4519769341424800,  6.4590756335570001,  7.4660710154540704  ,
  0.4846993717538740,  1.4418534893340400,  2.4396233526578399,  3.4449283074641301,  4.4522215431602303,  5.4600247089537497,  6.4678474650732500,  7.4755112396038204  ,
  0.4868788387884210,  1.4458816880774501,  2.4449453693581802,  3.4512929738485401,  4.4594816020107304,  5.4680811524828901,  6.4766280364460300,  7.4849602669647801  ,
  0.4890655831735910,  1.4499180163899199,  2.4502757688443899,  3.4576661688028398,  4.4667502962298498,  5.4761463185301800,  6.4854174055912699,  7.4944181592880899  ,
  0.4912596315667530,  1.4539625071514499,  2.4556145902463502,  3.4640479369647701,  4.4740276753726302,  5.4842202611193001,  6.4942156306515200,  7.5038849785543400  ,
  0.4934610107965660,  1.4580151934419201,  2.4609618729045200,  3.4704383231891498,  4.4813137892160304,  5.4923030344997397,  6.5030227699985197,  7.5133607869763503  ,
  0.4956697478643590,  1.4620761085426801,  2.4663176563718601,  3.4768373725499702,  4.4886086877611397,  5.5003946931492802,  6.5118388822359003,  7.5228456470020397  ,
  0.4978858699455390,  1.4661452859382600,  2.4716819804156800,  3.4832451303425200,  4.4959124212355501,  5.5084952917764598,  6.5206640262017901,  7.5323396213171501  ,
  0.5001094043910050,  1.4702227593179600,  2.4770548850195699,  3.4896616420854900,  4.5032250400956704,  5.5166048853231704,  6.5294982609715397,  7.5418427728481898  ,
  0.5023403787285710,  1.4743085625775600,  2.4824364103852998,  3.4960869535231098,  4.5105465950290702,  5.5247235289670904,  6.5383416458603900,  7.5513551647652299  ,
  0.5045788206644190,  1.4784027298210101,  2.4878265969347702,  3.5025211106273400,  4.5178771369568302,  5.5328512781242898,  6.5471942404262498,  7.5608768604848002  ,
  0.5068247580845560,  1.4825052953621201,  2.4932254853119700,  3.5089641596000298,  4.5252167170359501,  5.5409881884517898,  6.5560561044723897,  7.5704079236728301  ,
  0.5090782190562830,  1.4866162937263101,  2.4986331163849300,  3.5154161468751002,  4.5325653866617497,  5.5491343158501696,  6.5649272980502298,  7.5799484182475503  ,
  0.5113392318296950,  1.4907357596523301,  2.5040495312477602,  3.5218771191208398,  4.5399231974702703,  5.5572897164661503,  6.5738078814621304,  7.5894984083824699  ,
  0.5136078248391790,  1.4948637280940400,  2.5094747712226000,  3.5283471232420598,  4.5472902013407799,  5.5654544466952904,  6.5826979152642000,  7.5990579585092899  ,
  0.5158840267049351,  1.4990002342221600,  2.5149088778617399,  3.5348262063824101,  4.5546664503981802,  5.5736285631845499,  6.5915974602691403,  7.6086271333209803  ,
  0.5181678662345211,  1.5031453134260999,  2.5203518929495701,  3.5413144159266401,  4.5620519970155202,  5.5818121228350597,  6.6005065775490399,  7.6182059977747096  ,
  0.5204593724243960,  1.5072990013157801,  2.5258038585047502,  3.5478117995029099,  4.5694468938165302,  5.5900051828047701,  6.6094253284383599,  7.6277946170949900  ,
  0.5227585744615000,  1.5114613337234299,  2.5312648167822398,  3.5543184049851302,  4.5768511936781104,  5.5982078005112097,  6.6183537745367396,  7.6373930567766504  ,
  0.5250655017248310,  1.5156323467054700,  2.5367348102754401,  3.5608342804952500,  4.5842649497329200,  5.6064200336341798,  6.6272919777119599,  7.6470013825879599  ,
  0.5273801837870540,  1.5198120765443901,  2.5422138817183200,  3.5673594744056998,  4.5916882153719598,  5.6146419401185996,  6.6362400001028901,  7.6566196605737797  ,
  0.5297026504161190,  1.5240005597506201,  2.5477020740875602,  3.5738940353417399,  4.5991210442471200,  5.6228735781772503,  6.6451979041224396,  7.6662479570586299  ,
  0.5320329315768990,  1.5281978330644601,  2.5531994306047698,  3.5804380121838699,  4.6065634902739001,  5.6311150062935704,  6.6541657524606004,  7.6758863386499199  ,
  0.5343710574328400,  1.5324039334580200,  2.5587059947386299,  3.5869914540703101,  4.6140156076339496,  5.6393662832245601,  6.6631436080874398,  7.6855348722411003  ,
  0.5367170583476441,  1.5366188981371500,  2.5642218102071599,  3.5935544103993600,  4.6214774507778102,  5.6476274680036100,  6.6721315342561196,  7.6951936250149098  ,
  0.5390709648869460,  1.5408427645434299,  2.5697469209799402,  3.6001269308319999,  4.6289490744276103,  5.6558986199434100,  6.6811295945060403,  7.7048626644465603  ,
  0.5414328078200290,  1.5450755703561900,  2.5752813712803801,  3.6067090652943299,  4.6364305335797296,  5.6641797986388500,  6.6901378526658597,  7.7145420583070798  ,
  0.5438026181215500,  1.5493173534944700,  2.5808252055879799,  3.6133008639800801,  4.6439218835076197,  5.6724710639699802,  6.6991563728566996,  7.7242318746665699  ,
  0.5461804269732870,  1.5535681521190901,  2.5863784686407199,  3.6199023773532302,  4.6514231797645200,  5.6807724761049503,  6.7081852194952196,  7.7339321818975204  ,
  0.5485662657658950,  1.5578280046347399,  2.5919412054372999,  3.6265136561505198,  4.6589344781862696,  5.6890840955030502,  6.7172244572968696,  7.7436430486781900  ,
  0.5509601661006970,  1.5620969496920101,  2.5975134612395498,  3.6331347513840901,  4.6664558348941503,  5.6974059829177204,  6.7262741512790596,  7.7533645439959598  ,
  0.5533621597914810,  1.5663750261895000,  2.6030952815748001,  3.6397657143441200,  4.6739873062977004,  5.7057381993995602,  6.7353343667643699,  7.7630967371507804  ,
  0.5557722788663210,  1.5706622732760100,  2.6086867122383102,  3.6464065966014401,  4.6815289490976104,  5.7140808062994601,  6.7444051693838896,  7.7728396977585801  ,
  0.5581905555694250,  1.5749587303525900,  2.6142877992956501,  3.6530574500102402,  4.6890808202886403,  5.7224338652716700,  6.7534866250804599,  7.7825934957547203  ,
  0.5606170223629891,  1.5792644370747899,  2.6198985890852100,  3.6597183267107898,  4.6966429771625098,  5.7307974382769800,  6.7625788001119904,  7.7923582013975601  ,
  0.5630517119290760,  1.5835794333548301,  2.6255191282206400,  3.6663892791321202,  4.7042154773108997,  5.7391715875858100,  6.7716817610548397,  7.8021338852719300  ,
  0.5654946571715310,  1.5879037593638201,  2.6311494635933799,  3.6730703599948500,  4.7117983786284103,  5.7475563757814898,  6.7807955748071898,  7.8119206182926897  ,
  0.5679458912178890,  1.5922374555340000,  2.6367896423751800,  3.6797616223139200,  4.7193917393155802,  5.7559518657634197,  6.7899203085924702,  7.8217184717083601  ,
  0.5704054474213270,  1.5965805625610201,  2.6424397120206899,  3.6864631194014299,  4.7269956178819497,  5.7643581207503400,  6.7990560299627703,  7.8315275171047398  ,
  0.5728733593626300,  1.6009331214062099,  2.6480997202699998,  3.6931749048694700,  4.7346100731491001,  5.7727752042836098,  6.8082028068023703,  7.8413478264085299  ,
  0.5753496608521730,  1.6052951732989300,  2.6537697151512800,  3.6998970326330300,  4.7422351642538203,  5.7812031802305599,  6.8173607073311704,  7.8511794718910597  ,
  0.5778343859319330,  1.6096667597388901,  2.6594497449834198,  3.7066295569128398,  4.7498709506511396,  5.7896421127877904,  6.8265298001083501,  7.8610225261720101  ,
  0.5803275688775190,  1.6140479224985300,  2.6651398583786898,  3.7133725322383500,  4.7575174921176000,  5.7980920664845597,  6.8357101540358300,  7.8708770622231699  ,
  0.5828292442002260,  1.6184387036254000,  2.6708401042454399,  3.7201260134506899,  4.7651748487543797,  5.8065531061862199,  6.8449018383619302,  7.8807431533721903  ,
  0.5853394466491100,  1.6228391454446001,  2.6765505317908400,  3.7268900557056002,  4.7728430809905600,  5.8150252970976304,  6.8541049226850399,  7.8906208733064798  ,
  0.5878582112130940,  1.6272492905612299,  2.6822711905236001,  3.7336647144765500,  4.7805222495863600,  5.8235087047666498,  6.8633194769572299,  7.9005102960770399  ,
  0.5903855731230771,  1.6316691818628399,  2.6880021302567698,  3.7404500455576999,  4.7882124156364396,  5.8320033950876704,  6.8725455714880397,  7.9104114961023404  ,
  0.5929215678540940,  1.6360988625219399,  2.6937434011105799,  3.7472461050670400,  4.7959136405732403,  5.8405094343051003,  6.8817832769481599,  7.9203245481722897  ,
  0.5954662311274800,  1.6405383759985701,  2.6994950535152400,  3.7540529494494699,  4.8036259861703199,  5.8490268890170203,  6.8910326643732596,  7.9302495274522098  ,
  0.5980195989130680,  1.6449877660427901,  2.7052571382138400,  3.7608706354799799,  4.8113495145457499,  5.8575558261787304,  6.9002938051677800,  7.9401865094868400  ,
  0.6005817074314060,  1.6494470766973299,  2.7110297062652400,  3.7676992202668300,  4.8190842881655600,  5.8660963131064596,  6.9095667711088096,  7.9501355702043703  ,
  0.6031525931560020,  1.6539163523001601,  2.7168128090470098,  3.7745387612547199,  4.8268303698471904,  5.8746484174810103,  6.9188516343500002,  7.9600967859205696  ,
  0.6057322928155970,  1.6583956374871700,  2.7226064982584099,  3.7813893162280898,  4.8345878227629697,  5.8832122073515096,  6.9281484674254497,  7.9700702333428897  ,
  0.6083208433964580,  1.6628849771948200,  2.7284108259233699,  3.7882509433143801,  4.8423567104436804,  5.8917877511391596,  6.9374573432537003,  7.9800559895746304  ,
  0.6109182821446980,  1.6673844166628500,  2.7342258443935399,  3.7951237009873302,  4.8501370967821202,  5.9003751176410502,  6.9467783351417802,  7.9900541321191696  ,
  0.6135246465686280,  1.6718940014370300,  2.7400516063513498,  3.8020076480703899,  4.8579290460367002,  5.9089743760339797,  6.9561115167892202,  8.0000647388842197  ,
  0.6161399744411340,  1.6764137773718999,  2.7458881648130902,  3.8089028437400199,  4.8657326228350897,  5.9175855958783403,  6.9654569622921496,  8.0100878881860798  ,
  0.6187643038020720,  1.6809437906336100,  2.7517355731320801,  3.8158093475292101,  4.8735478921779203,  5.9262088471220400,  6.9748147461474499,  8.0201236587540308  ,
  0.6213976729607020,  1.6854840877026900,  2.7575938850018100,  3.8227272193308499,  4.8813749194424796,  5.9348442001044699,  6.9841849432569001,  8.0301721297346607  ,
  0.6240401204981440,  1.6900347153769599,  2.7634631544591501,  3.8296565194013001,  4.8892137703864700,  5.9434917255604800,  6.9935676289314497,  8.0402333806963302  ,
  0.6266916852698690,  1.6945957207744100,  2.7693434358875999,  3.8365973083638898,  4.8970645111518403,  5.9521514946244203,  7.0029628788954197,  8.0503074916336104  ,
  0.6293524064082040,  1.6991671513361200,  2.7752347840205300,  3.8435496472124902,  4.9049272082686199,  5.9608235788342796,  7.0123707692908503,  8.0603945429718298  ,
  0.6320223233248850,  1.7037490548292300,  2.7811372539445300,  3.8505135973151599,  4.9128019286587596,  5.9695080501357198,  7.0217913766818096,  8.0704946155715902  ,
  0.6347014757136210,  1.7083414793499301,  2.7870509011027500,  3.8574892204177398,  4.9206887396400898,  5.9782049808863098,  7.0312247780588502,  8.0806077907334100  ,
  0.6373899035527050,  1.7129444733264900,  2.7929757812982698,  3.8644765786476198,  4.9285877089302899,  5.9869144438596997,  7.0406710508433701,  8.0907341502023407  ,
  0.6400876471076440,  1.7175580855223200,  2.7989119506975100,  3.8714757345173898,  4.9364989046508896,  5.9956365122499200,  7.0501302728921704,  8.1008737761727208  ,
  0.6427947469338200,  1.7221823650390800,  2.8048594658337498,  3.8784867509286798,  4.9444223953312703,  6.0043712596756498,  7.0596025225019599,  8.1110267512928704  ,
  0.6455112438791880,  1.7268173613198099,  2.8108183836105698,  3.8855096911759399,  4.9523582499128702,  6.0131187601845602,  7.0690878784139199,  8.1211931586699002  ,
  0.6482371790870000,  1.7314631241520799,  2.8167887613054101,  3.8925446189503101,  4.9603065377532101,  6.0218790882577498,  7.0785864198183601,  8.1313730818746102  ,
  0.6509725939985700,  1.7361197036712701,  2.8227706565731601,  3.8995915983435299,  4.9682673286301302,  6.0306523188141403,  7.0880982263594001,  8.1415666049463198  ,
  0.6537175303560550,  1.7407871503637100,  2.8287641274497801,  3.9066506938518502,  4.9762406927460301,  6.0394385272149700,  7.0976233781396401,  8.1517738123978400  ,
  0.6564720302052880,  1.7454655150700500,  2.8347692323559701,  3.9137219703800499,  4.9842267007321102,  6.0482377892683701,  7.1071619557250303,  8.1619947892205200  ,
  0.6592361358986290,  1.7501548489885601,  2.8407860301008201,  3.9208054932454699,  4.9922254236527204,  6.0570501812339197,  7.1167140401496400,  8.1722296208892509  ,
  0.6620098900978600,  1.7548552036784699,  2.8468145798856699,  3.9279013281820698,  5.0002369330097300,  6.0658757798272900,  7.1262797129205202,  8.1824783933675800  ,
  0.6647933357771050,  1.7595666310633800,  2.8528549413077600,  3.9350095413445700,  5.0082613007469403,  6.0747146622249097,  7.1358590560227304,  8.1927411931129104  ,
  0.6675865162258010,  1.7642891834347401,  2.8589071743641798,  3.9421301993126199,  5.0162985992545401,  6.0835669060687696,  7.1454521519242098,  8.2030181070816806  ,
  0.6703894750516810,  1.7690229134552800,  2.8649713394556899,  3.9492633690950001,  5.0243489013736600,  6.0924325894711400,  7.1550590835809302,  8.2133092227346705  ,
  0.6732022561838140,  1.7737678741625400,  2.8710474973906699,  3.9564091181339198,  5.0324122804009104,  6.1013117910194499,  7.1646799344418799,  8.2236146280423306  ,
  0.6760249038756671,  1.7785241189724701,  2.8771357093890702,  3.9635675143092999,  5.0404888100930298,  6.1102045897812003,  7.1743147884543497,  8.2339344114901500  ,
  0.6788574627082170,  1.7832917016830301,  2.8832360370864398,  3.9707386259431598,  5.0485785646715300,  6.1191110653088803,  7.1839637300690100,  8.2442686620841297  ,
  0.6816999775930850,  1.7880706764777901,  2.8893485425379599,  3.9779225218040200,  5.0566816188274197,  6.1280312976449904,  7.1936268442452800,  8.2546174693562993  ,
  0.6845524937757220,  1.7928610979296999,  2.8954732882226102,  3.9851192711113699,  5.0647980477260397,  6.1369653673271198,  7.2033042164565897,  8.2649809233702598  ,
  0.6874150568386230,  1.7976630210047699,  2.9016103370472899,  3.9923289435401799,  5.0729279270118104,  6.1459133553930601,  7.2129959326958204,  8.2753591147268395  ,
  0.6902877127045890,  1.8024765010659001,  2.9077597523510299,  3.9995516092255099,  5.0810713328131998,  6.1548753433860002,  7.2227020794806904,  8.2857521345697709  ,
  0.6931705076400170,  1.8073015938766701,  2.9139215979092299,  4.0067873387670501,  5.0892283417476403,  6.1638514133597004,  7.2324227438593098,  8.2961600745914694  ,
  0.6960634882582470,  1.8121383556052300,  2.9200959379380400,  4.0140362032338901,  5.0973990309264998,  6.1728416478838799,  7.2421580134157404,  8.3065830270388297  ,
  0.6989667015229331,  1.8169868428282501,  2.9262828370986198,  4.0212982741691903,  5.1055834779601899,  6.1818461300495198,  7.2519079762756196,  8.3170210847191406  ,
  0.7018801947514640,  1.8218471125348299,  2.9324823605016301,  4.0285736235949798,  5.1137817609632803,  6.1908649434742902,  7.2616727211118404,  8.3274743410060292  ,
  0.7048040156184250,  1.8267192221305899,  2.9386945737116599,  4.0358623240170299,  5.1219939585596297,  6.1998981723080497,  7.2714523371503601,  8.3379428898454702  ,
  0.7077382121591030,  1.8316032294417000,  2.9449195427517498,  4.0431644484297102,  5.1302201498876903,  6.2089459012383603,  7.2812469141759699,  8.3484268257618997  ,
  0.7106828327730350,  1.8364991927189800,  2.9511573341079802,  4.0504800703209796,  5.1384604146057500,  6.2180082154961500,  7.2910565425382599,  8.3589262438643406  ,
  0.7136379262275930,  1.8414071706421100,  2.9574080147340598,  4.0578092636773997,  5.1467148328973504,  6.2270852008613096,  7.3008813131575101,  8.3694412398526801  ,
  0.7166035416616250,  1.8463272223238401,  2.9636716520560702,  4.0651521029891997,  5.1549834854766603,  6.2361769436685197,  7.3107213175307404,  8.3799719100239098  ,
  0.7195797285891370,  1.8512594073142199,  2.9699483139771301,  4.0725086632554204,  5.1632664535939998,  6.2452835308129897,  7.3205766477378500,  8.3905183512785495  ,
  0.7225665369030130,  1.8562037856050000,  2.9762380688822700,  4.0798790199891197,  5.1715638190413902,  6.2544050497563699,  7.3304473964477399,  8.4010806611270894  ,
  0.7255640168787980,  1.8611604176339400,  2.9825409856432299,  4.0872632492226302,  5.1798756641581702,  6.2635415885326902,  7.3403336569246100,  8.4116589376964797  ,
  0.7285722191785080,  1.8661293642892600,  2.9888571336234202,  4.0946614275129001,  5.1882020718366704,  6.2726932357543799,  7.3502355230342102,  8.4222532797367595  ,
  0.7315911948545040,  1.8711106869141600,  2.9951865826828601,  4.1020736319468503,  5.1965431255279899,  6.2818600806183502,  7.3601530892503000,  8.4328637866277099  ,
  0.7346209953534110,  1.8761044473113400,  3.0015294031832300,  4.1094999401468701,  5.2048989092478397,  6.2910422129121502,  7.3700864506610397,  8.4434905583856601  ,
  0.7376616725200770,  1.8811107077475699,  3.0078856659929798,  4.1169404302763004,  5.2132695075823801,  6.3002397230201899,  7.3800357029756496,  8.4541336956702207  ,
  0.7407132786016000,  1.8861295309584301,  3.0142554424924799,  4.1243951810450596,  5.2216550056942497,  6.3094527019301001,  7.3900009425309099,  8.4647932997913191  ,
  0.7437758662513840,  1.8911609801529199,  3.0206388045792698,  4.1318642717152896,  5.2300554893285600,  6.3186812412390498,  7.3999822662978900,  8.4754694727160693  ,
  0.7468494885332681,  1.8962051190183400,  3.0270358246733000,  4.1393477821070697,  5.2384710448190299,  6.3279254331602299,  7.4099797718888203,  8.4861623170759799  ,
  0.7499341989256910,  1.9012620117250500,  3.0334465757223401,  4.1468457926042301,  5.2469017590941700,  6.3371853705294301,  7.4199935575638403,  8.4968719361740099  ,
  0.7530300513259211,  1.9063317229314301,  3.0398711312073901,  4.1543583841602301,  5.2553477196835603,  6.3464611468116097,  7.4300237222380101,  8.5075984339918804  ,
  0.7561371000543320,  1.9114143177887799,  3.0463095651481602,  4.1618856383040601,  5.2638090147241501,  6.3557528561075998,  7.4400703654882996,  8.5183419151973805  ,
  0.7592553998587380,  1.9165098619463801,  3.0527619521086402,  4.1694276371462999,  5.2722857329667203,  6.3650605931609103,  7.4501335875607504,  8.5291024851518191  ,
  0.7623850059187840,  1.9216184215565699,  3.0592283672027398,  4.1769844633852298,  5.2807779637823504,  6.3743844533646099,  7.4602134893776304,  8.5398802499175304  ,
  0.7655259738503900,  1.9267400632799101,  3.0657088860999702,  4.1845562003129304,  5.2892857971689997,  6.3837245327681904,  7.4703101725447496,  8.5506753162654601  ,
  0.7686783597102570,  1.9318748542904101,  3.0722035850312501,  4.1921429318215697,  5.2978093237581900,  6.3930809280847001,  7.4804237393588400,  8.5614877916828895  ,
  0.7718422200004300,  1.9370228622807499,  3.0787125407947200,  4.1997447424097398,  5.3063486348217399,  6.4024537366977903,  7.4905542928150002,  8.5723177843812000  ,
  0.7750176116729131,  1.9421841554677399,  3.0852358307616901,  4.2073617171888298,  5.3149038222785601,  6.4118430566689897,  7.5007019366143002,  8.5831654033038305  ,
  0.7782045921343620,  1.9473588025976400,  3.0917735328826299,  4.2149939418895199,  5.3234749787016202,  6.4212489867449598,  7.5108667751714000,  8.5940307581341902  ,
  0.7814032192508180,  1.9525468729517299,  3.0983257256932601,  4.2226415028683704,  5.3320621973248903,  6.4306716263648704,  7.5210489136223000,  8.6049139593037598  ,
  0.7846135513525160,  1.9577484363518500,  3.1048924883206599,  4.2303044871144202,  5.3406655720504803,  6.4401110756679598,  7.5312484578322003,  8.6158151180002900  ,
  0.7878356472387530,  1.9629635631660101,  3.1114739004895799,  4.2379829822560096,  5.3492851974557798,  6.4495674355010202,  7.5414655144034803,  8.6267343461761001  ,
  0.7910695661828210,  1.9681923243141499,  3.1180700425286698,  4.2456770765674898,  5.3579211688007700,  6.4590408074261196,  7.5517001906836700,  8.6376717565564594  ,
  0.7943153679370010,  1.9734347912739001,  3.1246809953769201,  4.2533868589762402,  5.3665735820353202,  6.4685312937283799,  7.5619525947736497,  8.6486274626480597  ,
  0.7975731127376330,  1.9786910360864400,  3.1313068405901601,  4.2611124190695797,  5.3752425338067100,  6.4780389974238499,  7.5722228355358796,  8.6596015787476599  ,
  0.8008428613102370,  1.9839611313624499,  3.1379476603475598,  4.2688538471019397,  5.3839281214671502,  6.4875640222674003,  7.5825110226027697,  8.6705942199507700  ,
  0.8041246748747251,  1.9892451502881201,  3.1446035374583401,  4.2766112340019502,  5.3926304430814200,  6.4971064727609100,  7.5928172663851301,  8.6816055021604601  ,
  0.8074186151506571,  1.9945431666312801,  3.1512745553684800,  4.2843846713797902,  5.4013495974346499,  6.5066664541613504,  7.6031416780807302,  8.6926355420963493  ,
  0.8107247443625850,  1.9998552547475099,  3.1579607981675299,  4.2921742515345302,  5.4100856840401299,  6.5162440724891200,  7.6134843696829799,  8.7036844573035808  ,
  0.8140431252454650,  2.0051814895864801,  3.1646623505955702,  4.2999800674615800,  5.4188388031472803,  6.5258394345364001,  7.6238454539897500,  8.7147523661620401  ,
  0.8173738210501370,  2.0105219466982400,  3.1713792980501601,  4.3078022128602704,  5.4276090557496897,  6.5354526478756396,  7.6342250446121902,  8.7258393878956308  ,
  0.8207168955488841,  2.0158767022396700,  3.1781117265934800,  4.3156407821415401,  5.4363965435933199,  6.5450838208682098,  7.6446232559838903,  8.7369456425816399  ,
  0.8240724130410660,  2.0212458329810099,  3.1848597229595201,  4.3234958704356199,  5.4452013691846899,  6.5547330626730798,  7.6550402033698504,  8.7480712511602903  ,
  0.8274404383588240,  2.0266294163124301,  3.1916233745613400,  4.3313675736000103,  5.4540236357993299,  6.5644004832556702,  7.6654760028758497,  8.7592163354443908  ,
  0.8308210368728700,  2.0320275302507600,  3.1984027694984798,  4.3392559882273298,  5.4628634474902000,  6.5740861933967798,  7.6759307714577902,  8.7703810181290809  ,
  0.8342142744983470,  2.0374402534462499,  3.2051979965644599,  4.3471612116535097,  5.4717209090963497,  6.5837903047016697,  7.6864046269311599,  8.7815654228017497  ,
  0.8376202177007820,  2.0428676651894402,  3.2120091452543300,  4.3550833419658801,  5.4805961262515597,  6.5935129296092398,  7.6968976879806998,  8.7927696739520496  ,
  0.8410389335021060,  2.0483098454181601,  3.2188363057723799,  4.3630224780115299,  5.4894892053932196,  6.6032541814013603,  7.7074100741701201,  8.8039938969820799  ,
  0.8444704894867660,  2.0537668747245701,  3.2256795690399498,  4.3709787194056799,  5.4984002537712398,  6.6130141742122399,  7.7179419059520100,  8.8152382182166402  ,
  0.8479149538079200,  2.0592388343623198,  3.2325390267032801,  4.3789521665402003,  5.5073293794571301,  6.6227930230380396,  7.7284933046778299,  8.8265027649137000  ,
  0.8513723951937130,  2.0647258062538199,  3.2394147711415502,  4.3869429205922499,  5.5162766913532302,  6.6325908437465504,  7.7390643926080100,  8.8377876652749201  ,
  0.8548428829536430,  2.0702278729976000,  3.2463068954750200,  4.3949510835330603,  5.5252422992019001,  6.6424077530869798,  7.7496552929223004,  8.8490930484564405  ,
  0.8583264869850210,  2.0757451178757602,  3.2532154935731801,  4.4029767581367203,  5.5342263135950596,  6.6522438686998902,  7.7602661297301401,  8.8604190445796505  ,
  0.8618232777795070,  2.0812776248615399,  3.2601406600631702,  4.4110200479892701,  5.5432288459837302,  6.6620993091273304,  7.7708970280812304,  8.8717657847422000  ,
  0.8653333264297530,  2.0868254786269902,  3.2670824903381801,  4.4190810574977197,  5.5522500086876700,  6.6719741938229902,  7.7815481139761999,  8.8831334010291894  ,
  0.8688567046361280,  2.0923887645507402,  3.2740410805660400,  4.4271598918993602,  5.5612899149052799,  6.6818686431626197,  7.7922195143775204,  8.8945220265244096  ,
  0.8723934847135451,  2.0979675687258998,  3.2810165276979202,  4.4352566572710703,  5.5703486787235201,  6.6917827784544501,  7.8029113572203803,  8.9059317953218198  ,
  0.8759437395983730,  2.1035619779680199,  3.2880089294771002,  4.4433714605388497,  5.5794264151279798,  6.7017167219498903,  7.8136237714239396,  8.9173628425371696  ,
  0.8795075428554630,  2.1091720798232401,  3.2950183844479399,  4.4515044094874403,  5.5885232400131697,  6.7116705968542796,  7.8243568869025300,  8.9288153043197003  ,
  0.8830849686852590,  2.1147979625764699,  3.3020449919649399,  4.4596556127700504,  5.5976392701928503,  6.7216445273378298,  7.8351108345771499,  8.9402893178640994  ,
  0.8866760919310130,  2.1204397152597498,  3.3090888522019002,  4.4678251799182798,  5.6067746234105904,  6.7316386385467197,  7.8458857463870597,  8.9517850214225891  ,
  0.8902809880861160,  2.1260974276607101,  3.3161500661612102,  4.4760132213521597,  5.6159294183503699,  6.7416530566143100,  7.8566817553015200,  8.9633025543171900  ,
  0.8938997333015070,  2.1317711903311101,  3.3232287356833599,  4.4842198483902997,  5.6251037746474699,  6.7516879086725599,  7.8674989953317400,  8.9748420569520899  ,
  0.8975324043932220,  2.1374610945955701,  3.3303249634564702,  4.4924451732602098,  5.6342978128993897,  6.7617433228635502,  7.8783376015429498,  8.9864036708262898  ,
  0.9011790788500170,  2.1431672325603799,  3.3374388530260002,  4.5006893091087798,  5.6435116546769697,  6.7718194283512201,  7.8891977100666804,  8.9979875385463295  ,
  0.9048398348411270,  2.1488896971224500,  3.3445705088046398,  4.5089523700128602,  5.6527454225356797,  6.7819163553332196,  7.9000794581131704,  9.0095938038392500  ,
  0.9085147512241270,  2.1546285819783502,  3.3517200360822201,  4.5172344709900401,  5.6619992400270398,  6.7920342350529896,  7.9109829839839696,  9.0212226115657206  ,
  0.9122039075529020,  2.1603839816335801,  3.3588875410359602,  4.5255357280095403,  5.6712732317102299,  6.8021731998119197,  7.9219084270847304,  9.0328741077333401  ,
  0.9159073840857420,  2.1661559914118498,  3.3660731307406500,  4.5338562580033201,  5.6805675231638100,  6.8123333829817900,  7.9328559279382000,  9.0445484395101392  ,
  0.9196252617935510,  2.1719447074645801,  3.3732769131791098,  4.5421961788772398,  5.6898822409977399,  6.8225149190173102,  7.9438256281972901,  9.0562457552382405  ,
  0.9233576223681730,  2.1777502267804998,  3.3804989972527801,  4.5505556095225099,  5.6992175128653502,  6.8327179434688396,  7.9548176706584499,  9.0679662044477798  ,
  0.9271045482308440,  2.1835726471954202,  3.3877394927924200,  4.5589346698272104,  5.7085734674757198,  6.8429425929953203,  7.9658321992751899,  9.0797099378709394  ,
  0.9308661225407761,  2.1894120674020900,  3.3949985105690401,  4.5673334806879904,  5.7179502346060600,  6.8531890053774100,  7.9768693591717899,  9.0914771074562708  ,
  0.9346424292038340,  2.1952685869602702,  3.4022761623048998,  4.5757521640220000,  5.7273479451143698,  6.8634573195307702,  7.9879292966571898,  9.1032678663831206  ,
  0.9384335528813990,  2.2011423063068900,  3.4095725606847300,  4.5841908427789102,  5.7367667309522501,  6.8737476755194802,  7.9990121592391299,  9.1150823690763794  ,
  0.9422395789993020,  2.2070333267664002,  3.4168878193670902,  4.5926496409531596,  5.7462067251778599,  6.8840602145698302,  8.0101180956384503,  9.1269207712213305  ,
  0.9460605937569340,  2.2129417505612601,  3.4242220529959502,  4.6011286835963698,  5.7556680619691498,  6.8943950790841404,  8.0212472558035905,  9.1387832297787792  ,
  0.9498966841364670,  2.2188676808225800,  3.4315753772123201,  4.6096280968299501,  5.7651508766372199,  6.9047524126548501,  8.0323997909253606,  9.1506699030004004  ,
  0.9537479379122270,  2.2248112216008900,  3.4389479086661900,  4.6181480078578501,  5.7746553056398602,  6.9151323600787897,  8.0435758534518396,  9.1625809504442994  ,
  0.9576144436602030,  2.2307724778771698,  3.4463397650285499,  4.6266885449795598,  5.7841814865953802,  6.9255350673717100,  8.0547755971035695,  9.1745165329907792  ,
  0.9614962907676911,  2.2367515555739002,  3.4537510650036500,  4.6352498376032498,  5.7937295582965298,  6.9359606817829702,  8.0659991768889494,  9.1864768128583307  ,
  0.9653935694431040,  2.2427485615664202,  3.4611819283414098,  4.6438320162591200,  5.8032996607247096,  6.9464093518104804,  8.0772467491198192,  9.1984619536199297  ,
  0.9693063707259040,  2.2487636036943202,  3.4686324758499900,  4.6524352126129900,  5.8128919350643802,  6.9568812272158302,  8.0885184714272906,  9.2104721202194995  ,
  0.9732347864967080,  2.2547967907731801,  3.4761028294086098,  4.6610595594800204,  5.8225065237176103,  6.9673764590396701,  8.0998145027778801,  9.2225074789886499  ,
  0.9771789094875311,  2.2608482326062500,  3.4835931119805301,  4.6697051908386698,  5.8321435703189497,  6.9778951996172998,  8.1111350034897498,  9.2345681976636396  ,
  0.9811388332922070,  2.2669180399965598,  3.4911034476262301,  4.6783722418449196,  5.8418032197504797,  6.9884376025945603,  8.1224801352493596,  9.2466544454026405  ,
  0.9851146523769290,  2.2730063247590202,  3.4986339615167599,  4.6870608488465804,  5.8514856181570201,  6.9990038229438003,  8.1338500611281592,  9.2587663928031603  ,
  0.9891064620910101,  2.2791131997327900,  3.5061847799473602,  4.6957711493979897,  5.8611909129617104,  7.0095940169802597,  8.1452449455997300,  9.2709042119199001  ,
  0.9931143586777470,  2.2852387787938802,  3.5137560303512401,  4.7045032822747599,  5.8709192528817002,  7.0202083423786501,  8.1566649545570602,  9.2830680762826496  ,
  0.9971384392855041,  2.2913831768678201,  3.5213478413135499,  4.7132573874888601,  5.8806707879441200,  7.0308469581898700,  8.1681102553301503,  9.2952581609146794  ,
  1.0011788019789400,  2.2975465099426402,  3.5289603425856102,  4.7220336063038699,  5.8904456695023200,  7.0415100248581703,  8.1795810167038105,  9.3074746423512291  ,
  1.0052355457504101,  2.3037288950819801,  3.5365936650993799,  4.7308320812505604,  5.9002440502523603,  7.0521977042384103,  8.1910774089357901,  9.3197176986583798  ,
  1.0093087705315600,  2.3099304504384799,  3.5442479409820300,  4.7396529561425700,  5.9100660842496300,  7.0629101596136596,  8.2025996037751892,  9.3319875094522100  ,
  1.0133985772051000,  2.3161512952672698,  3.5519233035708999,  4.7484963760924401,  5.9199119269259199,  7.0736475557130900,  8.2141477744811304,  9.3442842559182004  ,
  1.0175050676167501,  2.3223915499397600,  3.5596198874285800,  4.7573624875278400,  5.9297817351066504,  7.0844100587300298,  8.2257220958416202,  9.3566081208309306  ,
  1.0216283445873700,  2.3286513359576100,  3.5673378283582302,  4.7662514382080898,  5.9396756670282898,  7.0951978363404899,  8.2373227441929409,  9.3689592885741302  ,
  1.0257685119253099,  2.3349307759669502,  3.5750772634192298,  4.7751633772408804,  5.9495938823562202,  7.1060110577217399,  8.2489498974390703,  9.3813379451610395  ,
  1.0299256744389300,  2.3412299937727399,  3.5828383309429599,  4.7840984550992900,  5.9595365422027404,  7.1168498935713700,  8.2606037350716193,  9.3937442782549692  ,
  1.0340999379493401,  2.3475491143534701,  3.5906211705488902,  4.7930568236390902,  5.9695038091454098,  7.1277145161265603,  8.2722844381899296,  9.4061784771903802  ,
  1.0382914093033200,  2.3538882638760299,  3.5984259231609101,  4.8020386361162499,  5.9794958472456701,  7.1386050991836401,  8.2839921895215500,  9.4186407329941009  ,
  1.0425001963864400,  2.3602475697107899,  3.6062527310239698,  4.8110440472048097,  5.9895128220677396,  7.1495218181180000,  8.2957271734430407,  9.4311312384069605  ,
  1.0467264081364400,  2.3666271604469902,  3.6141017377208500,  4.8200732130149699,  5.9995549006978397,  7.1604648499042902,  8.3074895760011405,  9.4436501879058099  ,
  1.0509701545567800,  2.3730271659083302,  3.6219730881893502,  4.8291262911114696,  6.0096222517637301,  7.1714343731369397,  8.3192795849340708,  9.4561977777257393  ,
  1.0552315467304201,  2.3794477171688300,  3.6298669287396601,  4.8382034405323102,  6.0197150454544603,  7.1824305680510001,  8.3310973896934897,  9.4687742058828395  ,
  1.0595106968338299,  2.3858889465689201,  3.6377834070720598,  4.8473048218077102,  6.0298334535405900,  7.1934536165433496,  8.3429431814665200,  9.4813796721971801  ,
  1.0638077181512100,  2.3923509877318101,  3.6457226722948302,  4.8564305969794201,  6.0399776493945900,  7.2045037021941800,  8.3548171531982707,  9.4940143783161801  ,
  1.0681227250889900,  2.3988339755801502,  3.6536848749425501,  4.8655809296203003,  6.0501478080116797,  7.2155810102888296,  8.3667194996146801,  9.5066785277384103  ,
  1.0724558331904801,  2.4053380463529002,  3.6616701669946301,  4.8747559848542901,  6.0603441060309002,  7.2266857278401000,  8.3786504172457192,  9.5193723258376703  ,
  1.0768071591508599,  2.4118633376225400,  3.6696787018941501,  4.8839559293765697,  6.0705667217566299,  7.2378180436106998,  8.3906101044490100,  9.5320959798876093  ,
  1.0811768208323400,  2.4184099883124799,  3.6777106345670001,  4.8931809314742001,  6.0808158351803296,  7.2489781481362501,  8.4025987614337208,  9.5448496990865994  ,
  1.0855649372796301,  2.4249781387148599,  3.6857661214413802,  4.9024311610469802,  6.0910916280028200,  7.2601662337486097,  8.4146165902849592,  9.5576336945830107  ,
  1.0899716287356100,  2.4315679305085598,  3.6938453204675601,  4.9117067896287203,  6.1013942836566697,  7.2713824945994601,  8.4266637949885794,  9.5704481795010601  ,
  1.0943970166572801,  2.4381795067775598,  3.7019483911380200,  4.9210079904088300,  6.1117239873291904,  7.2826271266844804,  8.4387405814561998,  9.5832933689668600  ,
  1.0988412237320300,  2.4448130120295501,  3.7100754945078300,  4.9303349382542496,  6.1220809259856797,  7.2939003278677799,  8.4508471575508999,  9.5961694801351207  ,
  1.1033043738940800,  2.4514685922149000,  3.7182267932155102,  4.9396878097317902,  6.1324652883930497,  7.3052022979067299,  8.4629837331131093,  9.6090767322160193  ,
  1.1077865923412900,  2.4581463947459299,  3.7264024515041099,  4.9490667831308004,  6.1428772651439401,  7.3165332384773096,  8.4751505199870607,  9.6220153465028204  ,
  1.1122880055522200,  2.4648465685164900,  3.7346026352427102,  4.9584720384862004,  6.1533170486811004,  7.3278933531997401,  8.4873477320476400,  9.6349855463996494  ,
  1.1168087413034300,  2.4715692639219000,  3.7428275119482302,  4.9679037576020004,  6.1637848333222500,  7.3392828476646503,  8.4995755852276300,  9.6479875574499907  ,
  1.1213489286871501,  2.4783146328791799,  3.7510772508076702,  4.9773621240750296,  6.1742808152853899,  7.3507019294595697,  8.5118342975455494,  9.6610216073654396  ,
  1.1259086981292299,  2.4850828288476601,  3.7593520227006798,  4.9868473233192798,  6.1848051927144203,  7.3621508081960298,  8.5241240891337604,  9.6740879260551296  ,
  1.1304881814073600,  2.4918740068499399,  3.7676520002225100,  4.9963595425904597,  6.1953581657053496,  7.3736296955369696,  8.5364451822671903,  9.6871867456554703  ,
  1.1350875116696399,  2.4986883234931700,  3.7759773577073799,  5.0058989710111303,  6.2059399363327596,  7.3851388052246296,  8.5487978013925296,  9.7003183005605091  ,
  1.1397068234534500,  2.5055259369907401,  3.7843282712522002,  5.0154657995961403,  6.2165507086769196,  7.3966783531089701,  8.5611821731578601,  9.7134828274527791  ,
  1.1443462527046500,  2.5123870071843202,  3.7927049187407600,  5.0250602212785500,  6.2271906888511896,  7.4082485571765497,  8.5735985264427494,  9.7266805653346502  ,
  1.1490059367971299,  2.5192716955662600,  3.8011074798682798,  5.0346824309360301,  6.2378600850299604,  7.4198496375798797,  8.5860470923890908,  9.7399117555601507  ,
  1.1536860145526600,  2.5261801653024398,  3.8095361361664000,  5.0443326254176499,  6.2485591074771198,  7.4314818166672598,  8.5985281044321002,  9.7531766418675101  ,
  1.1583866262611500,  2.5331125812554101,  3.8179910710285800,  5.0540110035711798,  6.2592879685749097,  7.4431453190132197,  8.6110417983321703,  9.7664754704120806  ,
  1.1631079137011899,  2.5400691100080599,  3.8264724697360499,  5.0637177662707904,  6.2700468828533698,  7.4548403714493601,  8.6235884122070896,  9.7798084897998407  ,
  1.1678500201609701,  2.5470499198875900,  3.8349805194839801,  5.0734531164453198,  6.2808360670202097,  7.4665672030958001,  8.6361681865649302,  9.7931759511216097  ,
  1.1726130904596701,  2.5540551809899998,  3.8435154094084001,  5.0832172591070197,  6.2916557399912696,  7.4783260453931799,  8.6487813643373599,  9.8065781079877894  ,
  1.1773972709690099,  2.5610850652048902,  3.8520773306133300,  5.0930104013806901,  6.3025061229214696,  7.4901171321351496,  8.6614281909136892,  9.8200152165635508  ,
  1.1822027096354599,  2.5681397462408300,  3.8606664761985598,  5.1028327525335300,  6.3133874392363500,  7.5019406995015201,  8.6741089141754095,  9.8334875356048901  ,
  1.1870295560025801,  2.5752193996510702,  3.8692830412878298,  5.1126845240052896,  6.3242999146640599,  7.5137969860919096,  8.6868237845313701,  9.8469953264951098  ,
  1.1918779612339401,  2.5823242028598101,  3.8779272230575499,  5.1225659294391104,  6.3352437772680403,  7.5256862329600001,  8.6995730549535608,  9.8605388532821596  ,
  1.1967480781363999,  2.5894543351888002,  3.8865992207660001,  5.1324771847128599,  6.3462192574801604,  7.5376086836484903,  8.7123569810135599,  9.8741183827163308  ,
  1.2016400611837501,  2.5966099778845702,  3.8952992357830900,  5.1424185079710298,  6.3572265881345604,  7.5495645842244903,  8.7251758209196097,  9.8877341842888207  ,
  1.2065540665408900,  2.6037913141460298,  3.9040274716205898,  5.1523901196571700,  6.3682660045020301,  7.5615541833156996,  8.7380298355542507,  9.9013865302710400  ,
  1.2114902520883000,  2.6109985291526199,  3.9127841339630001,  5.1623922425469404,  6.3793377443249701,  7.5735777321472302,  8.7509192885128293,  9.9150756957544104  ,
  1.2164487774471500,  2.6182318100930000,  3.9215694306988600,  5.1724251017817702,  6.3904420478530497,  7.5856354845788996,  8.7638444461425102,  9.9288019586910696  ,
  1.2214298040046501,  2.6254913461941598,  3.9303835719526998,  5.1824889249030797,  6.4015791578794801,  7.5977276971434602,  8.7768055775820795,  9.9425655999351594  ,
  1.2264334949400599,  2.6327773287511600,  3.9392267701176200,  5.1925839418871398,  6.4127493197779399,  7.6098546290853202,  8.7898029548024805,  9.9563669032849003  ,
  1.2314600152510300,  2.6400899511573801,  3.9480992398882599,  5.2027103851805903,  6.4239527815401303,  7.6220165424000497,  8.8028368526479195,  9.9702061555255703  ,
  1.2365095317805099,  2.6474294089353099,  3.9570011982946300,  5.2128684897365396,  6.4351897938141303,  7.6342137018745904,  8.8159075488780498,  9.9840836464729499  ,
  1.2415822132441601,  2.6547958997679002,  3.9659328647363901,  5.2230584930514103,  6.4464606099433004,  7.6464463751281899,  8.8290153242105003,  9.9979996690179203  ,
  1.2466782302582000,  2.6621896235305500,  3.9748944610178301,  5.2332806352024104,  6.4577654860060099,  7.6587148326540797,  8.8421604623645607, 10.0119545191715990  ,
  1.2517977553678501,  2.6696107823236299,  3.9838862113834499,  5.2435351588857300,  6.4691046808560504,  7.6710193478619599,  8.8553432501054008, 10.0259484961112990  ,
  1.2569409630763000,  2.6770595805055901,  3.9929083425542502,  5.2538223094553400,  6.4804784561638300,  7.6833601971212300,  8.8685639772893108, 10.0399819022277000  ,
  1.2621080298741600,  2.6845362247267999,  4.0019610837646900,  5.2641423349626502,  6.4918870764582604,  7.6957376598050002,  8.8818229369095505, 10.0540550431726000  ,
  1.2672991342695299,  2.6920409239639000,  4.0110446668002604,  5.2744954861968703,  6.5033308091695101,  7.7081520183349799,  8.8951204251433200, 10.0681682279072010  ,
  1.2725144568186000,  2.6995738895548600,  4.0201593260359196,  5.2848820167260504,  6.5148099246724902,  7.7206035582271699,  8.9084567413993199, 10.0823217687519990  ,
  1.2777541801569201,  2.7071353352346699,  4.0293052984750997,  5.2953021829389701,  6.5263246963312200,  7.7330925681383800,  8.9218321883664693, 10.0965159814373000  ,
  1.2830184890310801,  2.7147254771717799,  4.0384828237894599,  5.3057562440878003,  6.5378754005438999,  7.7456193399136799,  8.9352470720633104, 10.1107511851546000  ,
  1.2883075703312199,  2.7223445340051100,  4.0476921443595701,  5.3162444623315501,  6.5494623167890804,  7.7581841686347603,  8.9487017018885293, 10.1250277026090000  ,
  1.2936216131240099,  2.7299927268819202,  4.0569335053161204,  5.3267671027803898,  6.5610857276723600,  7.7707873526690596,  8.9621963906722808, 10.1393458600724000  ,
  1.2989608086863100,  2.7376702794962502,  4.0662071545821101,  5.3373244335407497,  6.5727459189743396,  7.7834291937200302,  8.9757314547285905, 10.1537059874381990  ,
  1.3043253505395100,  2.7453774181282302,  4.0755133429157500,  5.3479167257612996,  6.5844431796991998,  7.7961099968782603,  8.9893072139087202, 10.1681084182768000  ,
  1.3097154344844999,  2.7531143716840698,  4.0848523239542498,  5.3585442536799004,  6.5961778021243802,  7.8088300706735296,  9.0029239916555408, 10.1825534898916990  ,
  1.3151312586373700,  2.7608813717368701,  4.0942243542583698,  5.3692072946713596,  6.6079500818511798,  7.8215897271279600,  9.0165821150590393, 10.1970415433774000  ,
  1.3205730234657300,  2.7686786525681799,  4.1036296933579397,  5.3799061292961099,  6.6197603178562696,  7.8343892818101502,  9.0302819149126794, 10.2115729236781990  ,
  1.3260409318258399,  2.7765064512104600,  4.1130686037981796,  5.3906410413499302,  6.6316088125443002,  7.8472290538903398,  9.0440237257711402, 10.2261479796479000  ,
  1.3315351890003899,  2.7843650074902402,  4.1225413511869897,  5.4014123179145299,  6.6434958718014903,  7.8601093661967099,  9.0578078860089501, 10.2407670641107010  ,
  1.3370560027370999,  2.7922545640722598,  4.1320482042431497,  5.4122202494091898,  6.6554218050502296,  7.8730305452727398,  9.0716347378803892, 10.2554305339234000  ,
  1.3426035832880401,  2.8001753665044502,  4.1415894348454199,  5.4230651296434598,  6.6673869253048199,  7.8859929214356397,  9.0855046275805105, 10.2701387500391000  ,
  1.3481781434497599,  2.8081276632637300,  4.1511653180827199,  5.4339472558707200,  6.6793915492283604,  7.8989968288360703,  9.0994179053073907, 10.2848920775716000  ,
  1.3537798986042000,  2.8161117058028098,  4.1607761323051902,  5.4448669288430498,  6.6914359971905002,  7.9120426055189101,  9.1133749253255996, 10.2996908858614000  ,
  1.3594090667604599,  2.8241277485978800,  4.1704221591763604,  5.4558244528669997,  6.7035205933267203,  7.9251305934852798,  9.1273760460309195, 10.3145355485430010  ,
  1.3650658685973900,  2.8321760491973400,  4.1801036837263199,  5.4668201358605497,  6.7156456655985002,  7.9382611387558697,  9.1414216300163709, 10.3294264436134000  ,
  1.3707505275070699,  2.8402568682713398,  4.1898209944059897,  5.4778542894112396,  6.7278115458548298,  7.9514345914354001,  9.1555120441395506, 10.3443639535020000  ,
  1.3764632696391299,  2.8483704696625698,  4.1995743831424202,  5.4889272288354203,  6.7400185698949100,  7.9646513057784896,  9.1696476595913197, 10.3593484651421000  ,
  1.3822043239460300,  2.8565171204378399,  4.2093641453953401,  5.5000392732387304,  6.7522670775321796,  7.9779116402568002,  9.1838288519658899, 10.3743803700436990  ,
  1.3879739222292500,  2.8646970909409002,  4.2191905802147103,  5.5111907455777898,  6.7645574126595402,  7.9912159576275599,  9.1980560013323203, 10.3894600643676010  ,
  1.3937722991864201,  2.8729106548462000,  4.2290539902995699,  5.5223819727231804,  6.7768899233160198,  8.0045646250034999,  9.2123294923074308, 10.4045879490012010  ,
  1.3995996924594400,  2.8811580892139301,  4.2389546820580399,  5.5336132855236997,  6.7892649617547400,  8.0179580139242006,  9.2266497141303407, 10.4197644296361990  ,
  1.4054563426836300,  2.8894396745459900,  4.2488929656685599,  5.5448850188719003,  6.8016828845122896,  8.0313965004288494,  9.2410170607383009, 10.4349899168467990  ,
  1.4113424935378400,  2.8977556948433101,  4.2588691551424303,  5.5561975117710496,  6.8141440524795200,  8.0448804651306105,  9.2554319308443098, 10.4502648261708990  ,
  1.4172583917956700,  2.9061064376642798,  4.2688835683875999,  5.5675511074034896,  6.8266488309738396,  8.0584102932924306,  9.2698947280162596, 10.4655895781920010  ,
  1.4232042873777699,  2.9144921941843500,  4.2789365272738804,  5.5789461532003104,  6.8391975898129997,  8.0719863749044993,  9.2844058607576301, 10.4809645986229010  ,
  1.4291804334051901,  2.9229132592570402,  4.2890283576993902,  5.5903830009125803,  6.8517907033904200,  8.0856091047632805,  9.2989657425900507, 10.4963903183917000  ,
  1.4351870862539500,  2.9313699314760799,  4.2991593896585396,  5.6018620066841098,  6.8644285507520602,  8.0992788825522108,  9.3135747921374197, 10.5118671737293000  ,
  1.4412245056106900,  2.9398625132389800,  4.3093299573113502,  5.6133835311256002,  6.8771115156749900,  8.1129961129240993,  9.3282334332119099, 10.5273956062580010  ,
  1.4472929545295701,  2.9483913108119002,  4.3195403990543504,  5.6249479393905100,  6.8898399867475399,  8.1267612055852503,  9.3429420949016802, 10.5429760630837000  ,
  1.4533926994903601,  2.9569566343959002,  4.3297910575928400,  5.6365556012524900,  6.9026143574512400,  8.1405745753814198,  9.3577012116606006, 10.5586089968878000  ,
  1.4595240104578400,  2.9655587981946798,  4.3400822800148600,  5.6482068911844197,  6.9154350262444000,  8.1544366423855692,  9.3725112233997105, 10.5742948660235000  ,
  1.4656871609424000,  2.9741981204837100,  4.3504144178666300,  5.6599021884392604,  6.9283023966476103,  8.1683478319875107,  9.3873725755808106, 10.5900341346118000  ,
  1.4718824280620799,  2.9828749236809098,  4.3607878272297196,  5.6716418771325401,  6.9412168773309997,  8.1823085749854307,  9.4022857193118892, 10.6058272726416000  ,
  1.4781100926058299,  2.9915895344188201,  4.3712028687998004,  5.6834263463266401,  6.9541788822033803,  8.1963193076795200,  9.4172511114447897, 10.6216747560702010  ,
  1.4843704390982999,  3.0003422836184201,  4.3816599079671796,  5.6952559901170199,  6.9671888305033498,  8.2103804719674809,  9.4322692146748306, 10.6375770669276000  ,
  1.4906637558659801,  3.0091335065644902,  4.3921593148991196,  5.7071312077202103,  6.9802471468924399,  8.2244925154422202,  9.4473404976427204, 10.6535346934216990  ,
  1.4969903351048000,  3.0179635429827298,  4.4027014646238403,  5.7190524035637598,  6.9933542615501896,  8.2386558914916499,  9.4624654350386006, 10.6695481300468010  ,
  1.5033504729492999,  3.0268327371184598,  4.4132867371165396,  5.7310199873782501,  7.0065106102714001,  8.2528710594006895,  9.4776445077085096, 10.6856178776936000  ,
  1.5097444695432800,  3.0357414378172201,  4.4239155173872398,  5.7430343742911898,  7.0197166345654800,  8.2671384844554900,  9.4928782027629897, 10.7017444437626990  ,
  1.5161726291121000,  3.0446899986070699,  4.4345881955705702,  5.7550959849232202,  7.0329727817581000,  8.2814586380500295,  9.5081670136883591, 10.7179283422793010  ,
  1.5226352600365800,  3.0536787777827401,  4.4453051670176604,  5.7672052454862399,  7.0462795050950104,  8.2958319977950108,  9.5235114404602008, 10.7341700940118000  ,
  1.5291326749285601,  3.0627081384918000,  4.4560668323899604,  5.7793625878838801,  7.0596372638482103,  8.3102590476292804,  9.5389119896596100, 10.7504702265921000  ,
  1.5356651907082399,  3.0717784488225801,  4.4668735977553196,  5.7915684498141902,  7.0730465234245399,  8.3247402779337101,  9.5543691745919208, 10.7668292746389000  ,
  1.5422331286832200,  3.0808900818942999,  4.4777258746861399,  5.8038232748747403,  7.0865077554767097,  8.3392761856476003,  9.5698835154081596, 10.7832477798837000  ,
  1.5488368146294400,  3.0900434159491299,  4.4886240803598598,  5.8161275126699099,  7.1000214380168698,  8.3538672743878593,  9.5854555392292191, 10.7997262913002000  ,
  1.5554765788739100,  3.0992388344463802,  4.4995686376616497,  5.8284816189208897,  7.1135880555327597,  8.3685140545707704,  9.6010857802729497, 10.8162653652357010  ,
  1.5621527563794100,  3.1084767261589699,  4.5105599752895698,  5.8408860555779896,  7.1272080991064604,  8.3832170435366091,  9.6167747799840697, 10.8328655655459990  ,
  1.5688656868311599,  3.1177574852719800,  4.5215985278620696,  5.8533412909356901,  7.1408820665360402,  8.3979767656771305,  9.6325230871670300, 10.8495274637338990  ,
  1.5756157147254899,  3.1270815114835999,  4.5326847360280302,  5.8658477997503002,  7.1546104624598899,  8.4127937525659799,  9.6483312581221199, 10.8662516390898990  ,
  1.5824031894606800,  3.1364492101084598,  4.5438190465793804,  5.8784060633603401,  7.1683937984839403,  8.4276685430921905,  9.6641998567845597, 10.8830386788367990  ,
  1.5892284654298101,  3.1458609921832799,  4.5550019125663397,  5.8910165698097501,  7.1822325933119497,  8.4426016835967008,  9.6801294548669308, 10.8998891782776010  ,
  1.5960919021159701,  3.1553172745751801,  4.5662337934154102,  5.9036798139741098,  7.1961273728788004,  8.4575937280121707,  9.6961206320048703, 10.9168037409468010  ,
  1.6029938641896500,  3.1648184800923702,  4.5775151550500803,  5.9163962976896096,  7.2100786704868796,  8.4726452380060095,  9.7121739759062802, 10.9337829787651990  ,
  1.6099347216084701,  3.1743650375976800,  4.5888464700145102,  5.9291665298852800,  7.2240870269458100,  8.4877567831269207,  9.7282900825040404, 10.9508275121982010  ,
  1.6169148497193500,  3.1839573821246701,  4.6002282176000699,  5.9419910267183598,  7.2381529907154603,  8.5029289409547495,  9.7444695561122892, 10.9679379704186000  ,
  1.6239346293631500,  3.1935959549965700,  4.6116608839750404,  5.9548703117127699,  7.2522771180523202,  8.5181622972540598,  9.7607130095865209, 10.9851149914722000  ,
  1.6309944469818201,  3.2032812039481500,  4.6231449623172800,  5.9678049159011000,  7.2664599731594901,  8.5334574461313597,  9.7770210644874993, 11.0023592224483000  ,
  1.6380946947282200,  3.2130135832504898,  4.6346809529502897,  5.9807953779699004,  7.2807021283402404,  8.5488149901960995,  9.7933943512490806, 11.0196713196537000  ,
  1.6452357705786200,  3.2227935538388799,  4.6462693634824497,  5.9938422444085697,  7.2950041641553298,  8.5642355407255994,  9.8098335093501792, 11.0370519487913000  ,
  1.6524180784479501,  3.2326215834437200,  4.6579107089497498,  6.0069460696618799,  7.3093666695841302,  8.5797197178339992,  9.8263391874908805, 11.0545017851430000  ,
  1.6596420283079600,  3.2424981467248899,  4.6696055119620299,  6.0201074162862600,  7.3237902421897401,  8.5952681506453406,  9.8429120437728699, 11.0720215137565000  ,
  1.6669080363082900,  3.2524237254091499,  4.6813543028527498,  6.0333268551098902,  7.3382754882881400,  8.6108814774708993,  9.8595527458842600, 11.0896118296378000  ,
  1.6742165249006100,  3.2623988084312199,  4.6931576198326397,  6.0466049653967904,  7.3528230231215801,  8.6265603459909297,  9.8762619712891198, 11.1072734379474000  ,
  1.6815679229658500,  3.2724238920783102,  4.7050160091470401,  6.0599423350150401,  7.3674334710362404,  8.6423054134409494,  9.8930404074215108, 11.1250070542019000  ,
  1.6889626659446599,  3.2824994801382301,  4.7169300252372803,  6.0733395606091598,  7.3821074656643404,  8.6581173468025998,  9.9098887518845604, 11.1428134044806000  ,
  1.6964011959712499,  3.2926260840513200,  4.7289002309060999,  6.0867972477768797,  7.3968456501108903,  8.6739968229993902,  9.9268077126544600, 11.1606932256371000  ,
  1.7038839620105100,  3.3028042230662700,  4.7409271974872897,  6.1003160112503503,  7.4116486771450703,  8.6899445290973301,  9.9437980082895692, 11.1786472655164000  ,
  1.7114114199988799,  3.3130344243997998,  4.7530115050196100,  6.1138964750819804,  7.4265172093965699,  8.7059611625107198,  9.9608603681448393, 11.1966762831774990  ,
  1.7189840329885899,  3.3233172234006401,  4.7651537424252304,  6.1275392728350502,  7.4414519195568500,  8.7220474312130900,  9.9779955325917609, 11.2147810491212990  ,
  1.7266022712958899,  3.3336531637175302,  4.7773545076927197,  6.1412450477791598,  7.4564534905856599,  8.7382040539536199,  9.9952042532439194, 11.2329623455252000  ,
  1.7342666126529900,  3.3440427974717402,  4.7896144080648000,  6.1550144530908097,  7.4715226159228196,  8.7544317604791697, 10.0124872931883000, 11.2512209664827000  ,
  1.7419775423640800,  3.3544866854340398,  4.8019340602309901,  6.1688481520591596,  7.4866599997055303,  8.7707312917619706, 10.0298454272227000, 11.2695577182498000  ,
  1.7497355534654100,  3.3649853972063299,  4.8143140905252499,  6.1827468182971401,  7.5018663569913500,  8.7871034002333097, 10.0472794420991000, 11.2879734194980000  ,
  1.7575411468896200,  3.3755395114080100,  4.8267551351288898,  6.1967111359581200,  7.5171424139870098,  8.8035488500233594, 10.0647901367738990, 11.3064689015730990  ,
  1.7653948316345200,  3.3861496158674100,  4.8392578402788100,  6.2107417999583703,  7.5324889082832103,  8.8200684172072403, 10.0823783226638000, 11.3250450087618000  ,
  1.7732971249362799,  3.3968163078181202,  4.8518228624812396,  6.2248395162052601,  7.5479065890957999,  8.8366628900576405, 10.1000448239098000, 11.3437025985644000  ,
  1.7812485524474100,  3.4075401941008998,  4.8644508687313097,  6.2390050018317202,  7.5633962175131799,  8.8533330693042203, 10.1177904776468000, 11.3624425419756000  ,
  1.7892496484194600,  3.4183218913706499,  4.8771425367383703,  6.2532389854368997,  7.5789585667504804,  8.8700797683998402, 10.1356161342814010, 11.3812657237723000  ,
  1.7973009558907600,  3.4291620263093301,  4.8898985551575400,  6.2675422073333298,  7.5945944224104904,  8.8869038137940208, 10.1535226577766990, 11.4001730428088010  ,
  1.8054030268792600,  3.4400612358444600,  4.9027196238274202,  6.2819154198008000,  7.6103045827517199,  8.9038060452138303, 10.1715109259451990, 11.4191654123212010  ,
  1.8135564225807399,  3.4510201673737102,  4.9156064540144397,  6.2963593873471702,  7.6260898589637600,  8.9207873159522997, 10.1895818307490010, 11.4382437602385990  ,
  1.8217617135724200,  3.4620394789956501,  4.9285597686637503,  6.3108748869762703,  7.6419510754500903,  8.9378484931648501, 10.2077362786086990, 11.4574090295038000  ,
  1.8300194800223299,  3.4731198397468801,  4.9415803026572602,  6.3254627084633004,  7.6578890701188103,  8.9549904581738300, 10.2259751907210990, 11.4766621784023000  ,
  1.8383303119044900,  3.4842619298458000,  4.9546688030785502,  6.3401236546377202,  7.6739046946813003,  8.9722141067813901, 10.2442995033845000, 11.4960041809006000  ,
  1.8466948092201401,  3.4954664409431402,  4.9678260294855603,  6.3548585416741803,  7.6899988149592797,  8.9895203495912099, 10.2627101683346000, 11.5154360269939000  ,
  1.8551135822253100,  3.5067340763796402,  4.9810527541905696,  6.3696681993914899,  7.7061723112004099,  9.0069101123390993, 10.2812081530883010, 11.5349587230635000  ,
  1.8635872516647300,  3.5180655514510000,  4.9943497625482900,  6.3845534715600598,  7.7224260784028296,  9.0243843362329699, 10.2997944412984010, 11.5545732922439990  ,
  1.8721164490125799,  3.5294615936802698,  5.0077178532521103,  6.3995152162180897,  7.7387610266488096,  9.0419439783023705, 10.3184700331171000, 11.5742807748012010  ,
  1.8807018167201299,  3.5409229430982498,  5.0211578386388904,  6.4145543059967203,  7.7551780814480100,  9.0595900117580204, 10.3372359455714000, 11.5940822285206000  ,
  1.8893440084704600,  3.5524503525317499,  5.0346705450022498,  6.4296716284545301,  7.7716781840904501,  9.0773234263615503, 10.3560932129474990, 11.6139787291067000  ,
  1.8980436894407600,  3.5640445879003999,  5.0482568129151897,  6.4448680864217502,  7.7882622920097697,  9.0951452288060199, 10.3750428871876000, 11.6339713705947010  ,
  1.9068015365722000,  3.5757064285219902,  5.0619174975619901,  6.4601445983543400,  7.8049313791569501,  9.1130564431072898, 10.3940860382972000, 11.6540612657727000  ,
  1.9156182388477900,  3.5874366674267799,  5.0756534690797803,  6.4755020986984899,  7.8216864363849199,  9.1310581110068991, 10.4132237547654010, 11.6742495466174000  ,
  1.9244944975784499,  3.5992361116811602,  5.0894656129102298,  6.4909415382658597,  7.8385284718444401,  9.1491512923867102, 10.4324571439960000, 11.6945373647420010  ,
  1.9334310266977099,  3.6111055827207901,  5.1033548301615701,  6.5064638846197500,  7.8554585113917703,  9.1673370656957704, 10.4517873327527000, 11.7149258918572010  ,
  1.9424285530651100,  3.6230459166937998,  5.1173220379814497,  6.5220701224729201,  7.8724775990082296,  9.1856165283898097, 10.4712154676167000, 11.7354163202462000  ,
  1.9514878167788601,  3.6350579648142198,  5.1313681699409397,  6.5377612540972203,  7.8895867972325000,  9.2039907973839004, 10.4907427154579000, 11.7560098632535000  ,
  1.9606095714979299,  3.6471425937261501,  5.1454941764301099,  6.5535382997454796,  7.9067871876057296,  9.2224610095186002, 10.5103702639207000, 11.7767077557883000  ,
  1.9697945847740399,  3.6593006858789101,  5.1597010250655897,  6.5694022980862998,  7.9240798711302398,  9.2410283220402700, 10.5300993219241990, 11.7975112548437000  ,
  1.9790436383938499,  3.6715331399137900,  5.1739897011105400,  6.5853543066519897,  7.9414659687420501,  9.2596939130959104, 10.5499311201774000, 11.8184216400306000  ,
  1.9883575287316000,  3.6838408710625301,  5.1883612079075903,  6.6013954023002199,  7.9589466217979101,  9.2784589822431105, 10.5698669117102990, 11.8394402141290000  ,
  1.9977370671129200,  3.6962248115583800,  5.2028165673250202,  6.6175266816899301,  7.9765229925773999,  9.2973247509757595, 10.5899079724215000, 11.8605683036551990  ,
  2.0071830801899302,  3.7086859110596402,  5.2173568202169598,  6.6337492617720297,  7.9941962648003599,  9.3162924632659099, 10.6100556016423000, 11.8818072594474010  ,
  2.0166964103280800,  3.7212251370868401,  5.2319830268977903,  6.6500642802953198,  8.0119676441607304,  9.3353633861225802, 10.6303111227186000, 11.9031584572689000  ,
  2.0262779160054500,  3.7338434754733698,  5.2466962676316404,  6.6664728963284201,  8.0298383588768996,  9.3545388101680391, 10.6506758836112990, 11.9246232984305000  ,
  2.0359284722245801,  3.7465419308306802,  5.2614976431372700,  6.6829762907980603,  8.0478096602595794,  9.3738200502322702, 10.6711512575149000, 11.9462032104319000  ,
  2.0456489709376702,  3.7593215270282299,  5.2763882751091096,  6.6995756670446003,  8.0658828232975708,  9.3932084459662999, 10.6917386434961990, 11.9678996476247990  ,
  2.0554403214854302,  3.7721833076888100,  5.2913693067549801,  6.7162722513952904,  8.0840591472623906,  9.4127053624750694, 10.7124394671534000, 11.9897140918951010  ,
  2.0653034510502901,  3.7851283367000401,  5.3064419033511401,  6.7330672937560001,  8.1023399563323100,  9.4323121909707197, 10.7332551812964000, 12.0116480533691000  ,
  2.0752393051243199,  3.7981576987424299,  5.3216072528154301,  6.7499620682221302,  8.1207266002365301,  9.4520303494469502, 10.7541872666483990, 12.0337030711407000  ,
  2.0852488479927200,  3.8112724998347498,  5.3368665662991104,  6.7669578737095000,  8.1392204549204301,  9.4718612833753397, 10.7752372325715000, 12.0558807140237010  ,
  2.0953330632332001,  3.8244738678974501,  5.3522210787981699,  6.7840560346058902,  8.1578229232327004,  9.4918064664245598, 10.7964066178151000, 12.0781825813275990  ,
  2.1054929542321399,  3.8377629533347899,  5.3676720497849599,  6.8012579014442398,  8.1765354356349906,  9.5118674012031903, 10.8176969912891000, 12.1006103036597990  ,
  2.1157295447180000,  3.8511409296363799,  5.3832207638607903,  6.8185648515981603,  8.1953594509353298,  9.5320456200273505, 10.8391099528633990, 12.1231655437538000  ,
  2.1260438793128902,  3.8646089939990702,  5.3988685314305904,  6.8359782900008401,  8.2142964570460304,  9.5523426857139295, 10.8606471341934990, 12.1458499973252000  ,
  2.1364370241028201,  3.8781683679698302,  5.4146166894001704,  6.8534996498881604,  8.2333479717671096,  9.5727601924004606, 10.8823101995740000, 12.1686653939568000  ,
  2.1469100672276098,  3.8918202981106300,  5.4304666018974803,  6.8711303935670696,  8.2525155435963402,  9.5932997663929598, 10.9041008468210010, 12.1916134980134000  ,
  2.1574641194910198,  3.9055660566861601,  5.4464196610183402,  6.8888720132102899,  8.2718007525670103,  9.6139630670425298, 10.9260208081846000, 12.2146961095875000  ,
  2.1681003149922899,  3.9194069423753000,  5.4624772875980598,  6.9067260316783399,  8.2912052111143595,  9.6347517876521600, 10.9480718512932000, 12.2379150654782000  ,
  2.1788198117796300,  3.9333442810074901,  5.4786409320098102,  6.9246940033701199,  8.3107305649722498,  9.6556676564149502, 10.9702557801295000, 12.2612722402028000  ,
  2.1896237925267901,  3.9473794263247899,  5.4949120749910003,  6.9427775151031996,  8.3303784941009003,  9.6767124373849800, 10.9925744360413000, 12.2847695470451000  ,
  2.2005134652337199,  3.9615137607709601,  5.5112922284986796,  6.9609781870250300,  8.3501507136474107,  9.6978879314822208, 11.0150296987873000, 12.3084089391388010  ,
  2.2114900639522199,  3.9757486963086999,  5.5277829365954201,  6.9792976735565802,  8.3700489749401008,  9.7191959775330901, 11.0376234876203990, 12.3321924105903000  ,
  2.2225548495376999,  3.9900856752659202,  5.5443857763667399,  6.9977376643694500,  8.3900750665184400,  9.7406384533479393, 11.0603577624083990, 12.3561219976412990  ,
  2.2337091104282698,  4.0045261712128903,  5.5611023588716897,  7.0162998853982597,  8.4102308151998599,  9.7622172768372000, 11.0832345247963000, 12.3801997798721000  ,
  2.2449541634522401,  4.0190716898710503,  5.5779343301278299,  7.0349860998896796,  8.4305180871851295,  9.7839344071679299, 11.1062558194096010, 12.4044278814496000  ,
  2.2562913546654402,  4.0337237700551896,  5.5948833721322400,  7.0537981094895903,  8.4509387892041108,  9.8057918459622897, 11.1294237351013000, 12.4288084724197000  ,
  2.2677220602193899,  4.0484839846504403,  5.6119512039200403,  7.0727377553704001,  8.4714948697033403,  9.8277916385401198, 11.1527404062452010, 12.4533437700472000  ,
  2.2792476872621301,  4.0633539416254800,  5.6291395826623098,  7.0918069193998798,  8.4921883200777906,  9.8499358752072901, 11.1762080140766000, 12.4780360402055010  ,
  2.2908696748727801,  4.0783352850837904,  5.6464503048048398,  7.1110075253537204,  8.5130211759482499,  9.8722266925919797, 11.1998287880823990, 12.5028875988172990  ,
  2.3025894950315702,  4.0934296963545602,  5.6638852072498702,  7.1303415401736103,  8.5339955184867797,  9.8946662750311596, 11.2236050074441000, 12.5279008133498010  ,
  2.3144086536269799,  4.1086388951249901,  5.6814461685826299,  7.1498109752729597,  8.5551134757922895,  9.9172568560093008, 11.2475390025346000, 12.5530781043659000  ,
  2.3263286915015700,  4.1239646406161299,  5.6991351103446997,  7.1694178878923900,  8.5763772243184508,  9.9400007196519393, 11.2716331564721010, 12.5784219471344990  ,
  2.3383511855384600,  4.1394087328039504,  5.7169539983564803,  7.1891643825074096,  8.5977889903564897,  9.9629002022765203, 11.2958899067341000, 12.6039348733024990  ,
  2.3504777497901901,  4.1549730136880596,  5.7349048440909298,  7.2090526122905896,  8.6193510515753609,  9.9859576940031598, 11.3203117468325000, 12.6296194726312000  ,
  2.3627100366521399,  4.1706593686101101,  5.7529897061011104,  7.2290847806308198,  8.6410657386219203, 10.0091756404282000, 11.3449012280551000, 12.6554783948004010  ,
  2.3750497380825100,  4.1864697276243401,  5.7712106915039501,  7.2492631427124099,  8.6629354367841191, 10.0325565443633010, 11.3696609612748990, 12.6815143512831000  ,
  2.3874985868710801,  4.2024060669227001,  5.7895699575229802,  7.2695900071568200,  8.6849625877199799, 10.0561029676438010, 11.3945936188311010, 12.7077301172944000  ,
  2.4000583579592600,  4.2184704103172201,  5.8080697130929604,  7.2900677377300003,  8.7071496912556707, 10.0798175330087010, 11.4197019364849000, 12.7341285338176990  ,
  2.4127308698137302,  4.2346648307824601,  5.8267122205291697,  7.3106987551186497,  8.7294993072560008, 10.1037029260566000, 11.4449887154538990, 12.7607125097131990  ,
  2.4255179858565001,  4.2509914520607799,  5.8454997972647904,  7.3314855387786100,  8.7520140575708094, 10.1277618972811010, 11.4704568245294990, 12.7874850239105000  ,
  2.4384216159539598,  4.2674524503338098,  5.8644348176595198,  7.3524306288590200,  8.7746966280610703, 10.1519972641886000, 11.4961092022796990, 12.8144491276915000  ,
  2.4514437179681998,  4.2840500559632000,  5.8835197148831098,  7.3735366282059802,  8.7975497707085104, 10.1764119135046990, 11.5219488593438990, 12.8416079470673010  ,
  2.4645862993732699,  4.3007865553042404,  5.9027569828774702,  7.3948062044497300,  8.8205763058131499, 10.2010088034710990, 11.5479788808220010, 12.8689646852534010  ,
  2.4778514189401699,  4.3176642925959703,  5.9221491784014102,  7.4162420921794903,  8.8437791242829498, 10.2257909662395010, 11.5742024287642010, 12.8965226252486000  ,
  2.4912411884937802,  4.3346856719317897,  5.9416989231621500,  7.4378470952104596,  8.8671611900204095, 10.2507615103665990, 11.6006227447655000, 12.9242851325229000  ,
  2.5047577747455301,  4.3518531593145697,  5.9614089060380504,  7.4596240889478000,  8.8907255424110598, 10.2759236234154000, 11.6272431526715000, 12.9522556578201000  ,
  2.5184034012057199,  4.3691692848008001,  5.9812818853973999,  7.4815760228523702,  8.9144752989190703, 10.3012805746684000, 11.6540670613992000, 12.9804377400799000  ,
  2.5321803501799001,  4.3866366447383101,  6.0013206915182096,  7.5037059230138903,  8.9384136577956301, 10.3268357179583000, 11.6810979678819000, 13.0088350094875000  ,
  2.5460909648533399,  4.4042579041026100,  6.0215282291142698,  7.5260168948368200,  8.9625439009059402, 10.3525924946233000, 11.7083394601409000, 13.0374511906561000  ,
  2.5601376514687701,  4.4220357989371104,  6.0419074799733199,  7.5485121258452201,  8.9868693966812607, 10.3785544365922000, 11.7357952204943990, 13.0662901059495000  ,
  2.5743228816020900,  4.4399731389026300,  6.0624615057131104,  7.5711948886128901,  9.0113936032025705, 10.4047251696072000, 11.7634690289084000, 13.0953556789534000  ,
  2.5886491945415200,  4.4580728099424700,  6.0831934506620202,  7.5940685438254700,  9.0361200714229994, 10.4311084165917990, 11.7913647664982990, 13.1246519381011010  ,
  2.6031191997759899,  4.4763377770690100,  6.1041065448707199,  7.6171365434818803,  9.0610524485367208, 10.4577080011711010, 11.8194864191892000, 13.1541830204651000  ,
  2.6177355795985902,  4.4947710872788598,  6.1252041072624799,  7.6404024342426302,  9.0861944815021403, 10.4845278513540010, 11.8478380815439000, 13.1839531757205000  ,
  2.6325010918315699,  4.5133758726034801,  6.1464895489294999,  7.6638698609332998,  9.1115500207282292, 10.5115720033847000, 11.8764239607676990, 13.2139667702929010  ,
  2.6474185726800998,  4.5321553533031604,  6.1679663765837001,  7.6875425702117699,  9.1371230239328298, 10.5388446057745990, 11.9052483808993990, 13.2442282916978000  ,
  2.6624909397216299,  4.5511128412122499,  6.1896381961706997,  7.7114244144086497,  9.1629175601830699, 10.5663499235236000, 11.9343157872002000, 13.2747423530858000  ,
  2.6777211950390298,  4.5702517432445502,  6.2115087166561702,  7.7355193555505801,  9.1889378141279501, 10.5940923425427990, 11.9636307507505000, 13.3055136980022000  ,
  2.6931124285056800,  4.5895755650680199,  6.2335817539949101,  7.7598314695772803,  9.2151880904342800, 10.6220763742885000, 11.9931979732675010, 13.3365472053756000  ,
  2.7086678212316202,  4.6090879149587503,  6.2558612352927696,  7.7843649507633597,  9.2416728184380901, 10.6503066606220000, 12.0230222921566000, 13.3678478947472000  ,
  2.7243906491800698,  4.6287925078447802,  6.2783512031734299,  7.8091241163571699,  9.2683965570237206, 10.6787879789061010, 12.0531086858088990, 13.3994209317570990  ,
  2.7402842869647199,  4.6486931695511098,  6.3010558203616602,  7.8341134114494597,  9.2953639997445805, 10.7075252473550010, 12.0834622791609990, 13.4312716338997000  ,
  2.7563522118387001,  4.6687938412581200,  6.3239793744965702,  7.8593374140858003,  9.3225799801998299, 10.7365235306498990, 12.1140883495326010, 13.4634054765674000  ,
  2.7725980078868400,  4.6890985841861497,  6.3471262831884703,  7.8848008406373804,  9.3500494776825605, 10.7657880458391000, 12.1449923327577010, 13.4958280993981000  ,
  2.7890253704338601,  4.7096115845205304,  6.3705010993345104,  7.9105085514463100,  9.3777776231161099, 10.7953241685381000, 12.1761798296281010, 13.5285453129462990  ,
  2.8056381106820401,  4.7303371585916203,  6.3941085167091503,  7.9364655567620801,  9.4057697052965494, 10.8251374394492000, 12.2076566126691000, 13.5615631056966000  ,
  2.8224401605925400,  4.7512797583262101,  6.4179533758465599,  7.9626770229878101,  9.4340311774600192, 10.8552335712205000, 12.2394286332667000, 13.5948876514415990  ,
  2.8394355780263099,  4.7724439769872902,  6.4420406702336397,  7.9891482792555397,  9.4625676641960599, 10.8856184556656000, 12.2715020291699000, 13.6285253170484000  ,
  2.8566285521609700,  4.7938345552207799,  6.4663755528333597,  8.0158848243518506,  9.4913849687285605, 10.9162981713665010, 12.3038831323909010, 13.6624826706354000  ,
  2.8740234092017500,  4.8154563874292204,  6.4909633429600104,  8.0428923340163792,  9.5204890805883995, 10.9472789916857000, 12.3365784775301000, 13.6967664901894000  ,
  2.8916246184058099,  4.8373145284936001,  6.5158095335292101,  8.0701766686376004,  9.5498861837030695, 10.9785673932132010, 12.3695948105522010, 13.7313837726490990  ,
  2.9094367984408902,  4.8594142008667696,  6.5409197987076597,  8.0977438813721800,  9.5795826649311309, 11.0101700646770000, 12.4029390980441010, 13.7663417434872000  ,
  2.9274647241005800,  4.8817608020630203,  6.5663000019891600,  8.1256002267161005,  9.6095851230709801, 11.0420939163493000, 12.4366185369872010, 13.8016478668234000  ,
  2.9457133334006098,  4.9043599125708797,  6.5919562047259799,  8.1537521695582793,  9.6399003783759998, 11.0743460899798000, 12.4706405650763990, 13.8373098561050990  ,
  2.9641877350824499,  4.9272173042181304,  6.6178946751465899,  8.1822063947494801,  9.6705354826107399, 11.1069339692939990, 12.5050128716268990, 13.8733356853927990  ,
  2.9828932165522399,  4.9503389490202796,  6.6441218978935304,  8.2109698172222192,  9.7014977296854408, 11.1398651910948010, 12.5397434091051990, 13.9097336012943010  ,
  3.0018352522861700,  4.9737310285466600,  6.6706445841177500,  8.2400495927003199,  9.7327946669093404, 11.1731476570089010, 12.5748404053312000, 13.9465121355910990  ,
  3.0210195127349300,  4.9973999438406702,  6.6974696821689603,  8.2694531290396700,  9.7644341069066201, 11.2067895459242010, 12.6103123763971010, 13.9836801186056990  ,
  3.0404518737641100,  5.0213523259341004,  6.7246043889246998,  8.2991880982454997,  9.7964241402422303, 11.2407993271683000, 12.6461681403543000, 14.0212466933647000  ,
  3.0601384266685998,  5.0455950469987902,  6.7520561618045001,  8.3292624492153600,  9.8287731488091996, 11.2751857744801000, 12.6824168317252010, 14.0592213306132990  ,
  3.0800854888041700,  5.0701352321824196,  6.7798327315194999,  8.3596844212607593,  9.8614898200331194, 11.3099579808339000, 12.7190679168980000, 14.0976138447441000  ,
  3.1002996148819100,  5.0949802721795301,  6.8079421156122200,  8.3904625584656500,  9.8945831619546905, 11.3451253741787990, 12.7561312104731000, 14.1364344107083010  ,
  3.1207876089762401,  5.1201378365932504,  6.8363926328460698,  8.4216057249445093,  9.9280625192560699, 11.3806977341624000, 12.7936168926290000, 14.1756935819825000  ,
  3.1415565373005898,  5.1456158881481100,  6.8651929185093303,  8.4531231210687405,  9.9619375903030196, 11.4166852099130000, 12.8315355275881990, 14.2154023096722990  ,
  3.1626137418106599,  5.1714226978199296,  6.8943519407045004,  8.4850243007359492,  9.9962184452813005, 11.4530983389630010, 12.8698980832662000, 14.2555719628379990  ,
  3.1839668547007398,  5.1975668609546402,  6.9238790176997904,  8.5173191897638691, 10.0309155455124990, 11.4899480674018000, 12.9087159521964010, 14.2962143501413000  ,
  3.2056238138635398,  5.2240573144546802,  6.9537838364274602,  8.5500181054978608, 10.0660397640432000, 11.5272457713547000, 12.9480009738314990, 14.3373417429130010  ,
  3.2275928793919899,  5.2509033551189601,  6.9840764722209396,  8.5831317777295908, 10.1016024076087000, 11.5650032798968990, 12.9877654583319990, 14.3789668997594000  ,
  3.2498826512079502,  5.2781146592305097,  7.0147674098917303,  8.6166713710334992, 10.1376152400844010, 11.6032328995152000, 13.0280222119627000, 14.4211030928297000  ,
  3.2725020879119202,  5.3057013034951801,  7.0458675662568204,  8.6506485086381204, 10.1740905075460000, 11.6419474402490990, 13.0687845642288000, 14.4637641358830000  ,
  3.2954605269557500,  5.3336737874446598,  7.0773883142381599,  8.6850752979606405, 10.2110409650747990, 11.6811602436478010, 13.1100663968977000, 14.5069644143027010  ,
  3.3187677062520602,  5.3620430574285800,  7.1093415086677201,  8.7199643579460009, 10.2484799054538000, 11.7208852126995000, 13.1518821750660000, 14.5507189172257000  ,
  3.3424337873442700,  5.3908205323327802,  7.1417395139451196,  8.7553288483655507, 10.2864211899194000, 11.7611368439023000, 13.1942469804467000, 14.5950432719661990  ,
  3.3664693802747001,  5.4200181311750804,  7.1745952337099297,  8.7911825012468103, 10.3248792811467000, 11.8019302616612990, 13.2371765470710000, 14.6399537809344000  ,
  3.3908855703019500,  5.4496483027453602,  7.2079221427073099,  8.8275396546229299, 10.3638692786669000, 11.8432812552208000, 13.2806872996173000, 14.6854674612711000  ,
  3.4156939466350802,  5.4797240574744404,  7.2417343210447100,  8.8644152888107897, 10.4034069569349000, 11.8852063183566990, 13.3247963946046010, 14.7316020874412990  ,
  3.4409066333697900,  5.5102590017360198,  7.2760464910581897,  8.9018250654484508, 10.4435088062893990, 11.9277226920830000, 13.3695217647098000, 14.7783762370563990  ,
  3.4665363228321899,  5.5412673748079504,  7.3108740570307900,  8.9397853695482805, 10.4841920770734000, 11.9708484106493000, 13.4148821664989000, 14.8258093402239000  ,
  3.4925963115581902,  5.5727640887442300,  7.3462331480319403,  8.9783133548495702, 10.5254748272126000, 12.0146023511407010, 13.4608972318930000, 14.8739217327562000  ,
  3.5191005391626198,  5.6047647714371100,  7.3821406641772702,  9.0174269927868007, 10.5673759735824010, 12.0590042870242990, 13.5075875237257000, 14.9227347136065000  ,
  3.5460636303805302,  5.6372858131806698,  7.4186143266416904,  9.0571451254250803, 10.6099153475321990, 12.1040749460239000, 13.5549745957899010, 14.9722706069425990  ,
  3.5735009405965199,  5.6703444170830899,  7.4556727317976801,  9.0974875227554097, 10.6531137549769000, 12.1498360727525000, 13.6030810578144000, 15.0225528293147000  ,
  3.6014286052146698,  5.7039586537158504,  7.4933354098939304,  9.1384749447879905, 10.6969930415157000, 12.1963104965791000, 13.6519306458694010, 15.0736059624299990  ,
  3.6298635932645400,  5.7381475204344499,  7.5316228887394203,  9.1801292089344493, 10.7415761630907000, 12.2435222052643000, 13.7015482987503990, 15.1254558321047000  ,
  3.6588237656862401,  5.7729310058581902,  7.5705567629144896,  9.2224732632294604, 10.7868872627628000, 12.2914964249646010, 13.7519602409639000, 15.1781295940348000  ,
  3.6883279387931802,  5.8083301600570003,  7.6101597690947802,  9.2655312660101004, 10.8329517542500010, 12.3402597072789000, 13.8031940730132000, 15.2316558271059000  ,
  3.7183959534741500,  5.8443671710623502,  7.6504558681481196,  9.3093286727492703, 10.8797964129595000, 12.3898400240939000, 13.8552788697662010, 15.2860646350536000  ,
  3.7490487507680701,  5.8810654483987399,  7.6914703347488000,  9.3538923308288204, 10.9274494753330010, 12.4402668710857010, 13.9082452877954010, 15.3413877573869010  ,
  3.7803084545287100,  5.9184497144230397,  7.7332298553511096,  9.3992505831402795, 10.9759407474363010, 12.4915713808427000, 13.9621256826872000, 15.3976586906104010  ,
  3.8121984619918901,  5.9565461043644401,  7.7757626354760498,  9.4454333815196705, 11.0253017238438990, 12.5437864467041000, 14.0169542374574000, 15.4549128209139010  ,
  3.8447435431687502,  5.9953822760786402,  7.8190985173947603,  9.4924724111589498, 11.0755657180167000, 12.5969468585601000, 14.0727671033591000, 15.5131875696603000  ,
  3.8779699501169400,  6.0349875306709997,  7.8632691094422196,  9.5404012272951206, 11.1267680055307990, 12.6510894520256990, 14.1296025545490010, 15.5725225531828000  ,
  3.9119055372904699,  6.0753929453060396,  7.9083079283687701,  9.5892554056611807, 11.1789459817112990, 12.7062532726046000, 14.1875011582838000, 15.6329597586180000  ,
  3.9465798943433499,  6.1166315197115102,  7.9542505563404102,  9.6390727083974301, 11.2321393354474990, 12.7624797566899010, 14.2465059625597000, 15.6945437377479000  ,
  3.9820244929644999,  6.1587383381071703,  8.0011348144354706,  9.6898932673707208, 11.2863902412253000, 12.8198129315189000, 14.3066627033859990, 15.7573218211142000  ,
  4.0182728495599997,  6.2017507485490997,  8.0490009547635299,  9.7417597871426906, 11.3417435717198000, 12.8782996365178000, 14.3680200342178990, 15.8213443550070000  ,
  4.0553607058790098,  6.2457085619866399,  8.0978918736588508,  9.7947177701714097, 11.3982471336519000, 12.9379897688469010, 14.4306297804539000, 15.8866649643297000  ,
  4.0933262300096898,  6.2906542736907696,  8.1478533487861604,  9.8488157672368999, 11.4559519300328990, 12.9989365563950000, 14.4945472223635010, 15.9533408448096010  ,
  4.1322102405634604,  6.3366333101401597,  8.1989343034526598,  9.9041056565613701, 11.5149124524269000, 13.0611968619944000, 14.5598314103494000, 16.0214330885842000  ,
  4.1720564573311698,  6.3836943049605601,  8.2511871019624898,  9.9606429556655502, 11.5751870074536000, 13.1248315232469000, 14.6265455170862000, 16.0910070478496010  ,
  4.2129117822498898,  6.4318894081186704,  8.3046678804955292, 10.0184871706826010, 11.6368380824669000, 13.1899057330895990, 14.6947572318461010, 16.1621327420462000  ,
  4.2548266151845304,  6.4812746332994102,  8.3594369187675799, 10.0777021886660010, 11.6999327561948000, 13.2564894671115990, 14.7645392032319990, 16.2348853150027000  ,
  4.2978552098283496,  6.5319102492679901,  8.4155590586584008, 10.1383567194073990, 11.7645431611469990, 13.3246579646973000, 14.8359695376386010, 16.3093455495859980  ,
  4.3420560759939999,  6.5838612220745096,  8.4731041771190796, 10.2005247944617000, 11.8307470058350010, 13.3944922723516000, 14.9091323620894000, 16.3856004487793000  ,
  4.3874924357397900,  6.6371977162388296,  8.5321477220328497, 10.2642863325127000, 11.8986281663428000, 13.4660798591187000, 14.9841184617040000, 16.4637438937621990  ,
  4.4342327422077803,  6.6919956646150700,  8.5927713213665609, 10.3297277819605000, 11.9682773586151010, 13.5395153159022000, 15.0610260040120000, 16.5438773915925990  ,
  4.4823512718054603,  6.7483374185484601,  8.6550634779857507, 10.3969428537520990, 12.0397929050631000, 13.6149011528134010, 15.1399613647281990, 16.6261109275619990  ,
  4.5319288025251696,  6.8063124922949703,  8.7191203650158506, 10.4660333601180010, 12.1132816118423000, 13.6923487115343010, 15.2210400725605000, 16.7105639403415010  ,
  4.5830533938763001,  6.8660184185943303,  8.7850467397383607, 10.5371101781412000, 12.1888597765659000, 13.7719792132206000, 15.3043878942815010, 16.7973664418106980  ,
  4.6358212872479303,  6.9275617359278403,  8.8529569978839202, 10.6102943611567010, 12.2666543504636000, 13.8539249668778000, 15.3901420858504990, 16.8866603081550010  ,
  4.6903379497115099,  6.9910591325569902,  8.9229763950380292, 10.6857184260835010, 12.3468042843209990, 13.9383307686691000, 15.4784528410860990, 16.9786007747072000  ,
  4.7467192895699801,  7.0566387782029700,  8.9952424680040508, 10.7635278512287990, 12.4294620942495000, 14.0253555295849000, 15.5694849765958010, 17.0733581744328010  ,
  4.8050930786945596,  7.1244418815543300,  9.0699066967564104, 10.8438828272885990, 12.5147956918775010, 14.1151741777613000, 15.6634199008230000, 17.1711199693930010  ,
  4.8656006253213802,  7.1946245211768698,  9.1471364575924099, 10.9269603147502000, 12.6029905344766000, 14.2079798930741990, 15.7604579267921990, 17.2720931365958990  ,
  4.9283987521290804,  7.2673598095186200,  9.2271173309671397, 11.0129564744238010, 12.6942521646453010, 14.3039867462664990, 15.8608210032522990, 17.3765069852221000  ,
  4.9936621489415396,  7.3428404654843202,  9.3100558442590895, 11.1020895554355990, 12.7888092275219010, 14.4034328339040010, 15.9647559585907000, 17.4846165024790000  ,
  5.0615861884919697,  7.4212818917908896,  9.3961827517350898, 11.1946033481375990, 12.8869170776061990, 14.5065840254561000, 16.0725383777249000, 17.5967063519487010  ,
  5.1323903190291604,  7.5029258808313903,  9.4857569831965503, 11.2907713400562000, 12.9888621192319000, 14.6137384719500010, 16.1844772664214000, 17.7130956835697010  ,
  5.2063221815436496,  7.5880451096689701,  9.5790704319463202, 11.3909017540996000, 13.0949670675649990, 14.7252320700571000, 16.3009207033788000, 17.8341439616477010  ,
  5.2836626455131901,  7.6769486348106399,  9.6764538058004401, 11.4953437039519000, 13.2055973750509000, 14.8414451356566010, 16.4222627425711000, 17.9602580813117000  ,
  5.3647320204038396,  7.7699886660804198,  9.7782838377118697, 11.6044947780047990, 13.3211691478494000, 14.9628106234625000, 16.5489519135973000, 18.0919011316150990  ,
  5.4498977882965596,  7.8675689944193001,  9.8849922538563000, 11.7188104694180010, 13.4421589874707000, 15.0898243440092000, 16.6815017862472000, 18.2296032854561010  ,
  5.5395843274227303,  7.9701555831944004,  9.9970770398902609, 11.8388160197182990, 13.5691163488531000, 15.2230577910081010, 16.8205042324672010, 18.3739754684085990  ,
  5.6342852747971897,  8.0782900257349493, 10.1151167507784000, 11.9651214579570000, 13.7026792296036990, 15.3631744236594000, 16.9666462580049000, 18.5257267046786000  ,
  5.7345794364031404,  8.1926068534148495, 10.2397889079345000, 12.0984409301808990, 13.8435943307140990, 15.5109505858536000, 17.1207316242530010, 18.6856863968705010  ,
  5.8411515403403396,  8.3138560970477098, 10.3718939706010000, 12.2396178784132010, 13.9927433125094010, 15.6673027450113000, 17.2837089977469990, 18.8548333282774010  ,
  5.9548197158697000,  8.4429331393228395, 10.5123870406454000, 12.3896583326641990, 14.1511775025856000, 15.8333234925241990, 17.4567091483055990, 19.0343339827499990  ,
  6.0765724944360899,  8.5809188822967393, 10.6624205037790000, 12.5497756728233990, 14.3201645500985000, 16.0103299258537000, 17.6410949324614990, 19.2255940280747990  ,
  6.2076195857062597,  8.7291348266041808, 10.8234024739619010, 12.7214519594569000, 14.5012523330868990, 16.1999299088288000, 17.8385297348648000, 19.4303288006614990  ,
  6.3494630761309896,  8.8892202419512607, 10.9970786391708000, 12.9065237918454990, 14.6963583992796990, 16.4041147851543980, 18.0510732159924000, 19.6506618961273990  ,
  6.5039997677969401,  9.0632429959305103, 11.1856497444807010, 13.1073055050158000, 14.9078982672936000, 16.6253923432410000, 18.2813186015786010, 19.8892665112485010  ,
  6.6736725678496098,  9.2538633555391705, 11.3919451339862000, 13.3267710808753000, 15.1389748167792990, 16.8669830417540010, 18.5325952479716990, 20.1495739512193990  ,
  6.8617021354224601,  9.4645843868548205, 11.6196878863423990, 13.5688319537438990, 15.3936674211090010, 17.1331194977910000, 18.8092777371389990, 20.4360917301189990  ,
  7.0724559184609497,  9.7001504581675793, 11.8739165059824000, 13.8387786534520000, 15.6774914360136000, 17.4295222955533010, 19.1172768291990990, 20.7549087220475990  ,
  7.3120655951032800,  9.9672132434165892, 12.1616892023761010, 14.1440180450267000, 15.9981649350376000, 17.7641937058272990, 19.4648582279468980, 21.1145374143133000  ,
  7.5895250327283801, 10.2755146030711000, 12.4933338226050010, 14.4953810530246990, 16.3669681800936000, 18.1488245151460990, 19.8640933805186000, 21.5274059514192010  ,
  7.9188012009068096, 10.6401577166589990, 12.8848457388273000, 14.9096299090341000, 16.8013488516042000, 18.6014889709988010, 20.3336377475907000, 22.0127145849026000  ,
  8.3233374492196592, 11.0864448192874010, 13.3629907888514000, 15.4147901677871000, 17.3304594597643980, 19.1523703556478000, 20.9046312063177990, 22.6025001602848010  ,
  8.8471800115697707, 11.6618089641909000, 13.9778772871924010, 16.0632765137269010, 18.0087801377001000, 19.8578393536294020, 21.6351999091389010, 23.3565355864759000  ,
  9.5894860482676592, 12.4727391804071990, 14.8418095624684000, 16.9724172172565990, 18.9581442937757990, 20.8438569045822000, 22.6551401184851000, 24.4082169364255000  ,
 10.8678632226482000, 13.8590335415269990, 16.3122906059188000, 18.5150574311276020, 20.5651816325991990, 22.5096992600533990, 24.3754915153926990, 26.1796339917508010  ,
 67.3226260505337990, 71.7912264702149940, 76.1156142733855030, 79.8301701345152000, 82.3769564309593960, 86.1601942443541020, 88.3610604605257070, 91.5019210620253030  };
//////////////////////////////////////////////////////////


bool cmppt2d ( const Pt2d a, const Pt2d b)
{
    return a.X<b.X;
}
bool cmppt2i ( const Pt2i a,const Pt2i b)
{
    return a.X<b.X;
}
bool vec2cvMat( vector<double> &vec, CvMat* mat, int nRow, int nCol )
{
    for( int i = 0; i < nRow; i++ )
    {
        for( int j = 0; j < nCol; j++ )
        {
            cvmSet( mat, i, j, vec[ i * nCol +j ] );
        }
    }
    return true;
}
bool cvMat2vec(CvMat* mat, vector<double> &vec )
{
    vec.clear();
    int nDim[2] ;
    cvGetDims(mat, nDim);
    for( int i = 0; i < nDim[0]; i++ )
    {
        for( int j = 0; j < nDim[1]; j++ )
        {
            vec.push_back( cvmGet( mat, i, j ) );
        }
    }
    return true;
}

bool get_rand(vector<bool> &r, int N, int M, int seed = Nodata)
{
    if( seed != Nodata )
    {
        srand(seed);//rand('twister', seed)
    }
    if (N > M)
    {
        printf("N should be less or equal than M!\n");
        return false;
    }
    vector<bool> r1,r2,r3;
    r1.assign(N,true);
    r2.assign(M-N,false);////////////¸Ä¶¯ ½«M-N+1 ¸Ä³ÉM-N
    r3.resize(M);////////////¸Ä¶¯ ½«M+1 ¸Ä³ÉM-N
    merge(r1.begin(),r1.end(),r2.begin(),r2.end(),r3.begin());
    vector<Pt2d> temp;
    Pt2d tmpPt2d;
    srand((unsigned)time(NULL));
    for( int i = 0; i < M; i++ )
    {
        tmpPt2d.X =rand();
        tmpPt2d.Y = i;
        temp.push_back(tmpPt2d);
    }
    std::sort(temp.begin(),temp.end(),cmppt2d);
    for( int i = 0; i < temp.size(); i++ )
    {
        tmpPt2d  = temp[i];
        r.push_back(r3[tmpPt2d.Y]);
    }
    return true;
}
bool get_rand_prob(vector<bool> &h, int N, vector<double> P, int seed = Nodata)//Î´²âÊÔ
{
    if( N > P.size() )
    {
        printf("N should be less or equal than the length of P!\n");
        return false;
    }
    if( seed != Nodata )
    {
        srand(seed);//rand('twister', seed)
    }
    vector<double> cmf;
    double count = 0;
    for( int i = 0; i < P.size(); i++ )
    {
        count += P[i];
    }
    cmf.push_back(P[0]/count);
    for( int i = 1; i < P.size(); i++ )
    {
        cmf.push_back( P[i]/count + cmf[i-1] );
    }
    vector<bool> flag(P.size(),false);
    int n = 1;
    h.assign( N, 0 );
    double v;
    while ( n <= N )
    {
        //% get an element uniformly distributed in [0, 1]
        v = rand()/RAND_MAX;
        //% seek for the smallest upper bound
        h[n] = 1;
        while (v > cmf[h[n]])
        {
            h[n] = h[n] + 1;
        }
        //% make sure the element was not already selected
        if (flag[h[n]] == false)
        {
            flag[h[n]] = true;
            n = n + 1;
        }

        else
        {
            //% we need to increment the seed in order not to generate always the
            //% same random number
            if ( seed != Nodata )
            {
                seed = seed + 1;
            }

        }
    }
    return true;
}
bool validateMSS_foo( vector<MatchPts>X, vector<int> s )//ÎÞÄÚÈÝ
{
    return true;
}
bool validateTheta_foo( vector<MatchPts>X, vector<double> &Theta, vector<int> s )//ÎÞÄÚÈÝ
{
    return true;
}
bool normalize_points( vector<Pt2d> &x, vector<double> &T )
{
    //% compute the translation
    Pt2d x_bar,tmppt2d;
    x_bar.X = x_bar.Y = 0;
    for( int i = 0; i < x.size(); i++ )
    {
        x_bar.X += x[i].X;
        x_bar.Y += x[i].Y;
    }
    x_bar.X = x_bar.X/x.size();
    x_bar.Y = x_bar.Y/x.size();
    //% center the points
    //% faster than xc = x - repmat(x_bar, 1, size(x, 2));
    vector<Pt2d> xc;
    for( int i = 0; i < x.size(); i++ )
    {
        tmppt2d.X = x[i].X - x_bar.X;
        tmppt2d.Y = x[i].Y - x_bar.Y;
        xc.push_back(tmppt2d);
    }
    //% compute the average point distance
    vector<double> rho;
    double rho_bar = 0;
    for( int i = 0; i < xc.size(); i++ )
    {
        rho.push_back(sqrt(xc[i].X*xc[i].X+xc[i].Y*xc[i].Y));
        rho_bar += rho[i];
    }
    rho_bar = rho_bar/x.size();
    //% compute the scale factor
    double s = sqrt(2.0)/rho_bar;
    //% scale the points
    vector<Pt2d> xn;
    for( int i = 0; i < xc.size(); i++ )
    {
        tmppt2d.X = xc[i].X * s;
        tmppt2d.Y = xc[i].Y * s;
        xn.push_back(tmppt2d);
    }
    x.clear();
    x.assign(xn.begin(),xn.end());
    //% compute the transformation matrix
    T.assign( 9, 0.0 );
    T[0] = s;
    T[2] = -1.0 * s * x_bar.X;
    T[4] = s;
    T[5] = -1.0 * s * x_bar.Y;
    T[8] = 1;
    return true;
}
bool RSTLS( vector<double> &H,vector<Pt2d> X1, vector<Pt2d> X2, bool normalization = true )
{
    int N = X1.size();
    //% checks
    if ( X2.size() != N )
    {
        printf("RSTLS:inputError!The set of input points should have the same cardinality!\n");
    }
    if ( N < 2 )
    {
        printf("RSTLS:inputError!At least 2 point correspondences are needed!\n");
    }
    //% normalize the input
    vector<double> T1,T2;
    if( normalization )
    {
        //% fprintf('\nNormalizing...')
        normalize_points( X1, T1 );
        normalize_points( X2, T2 );
    }
    //% estimation.´Ë´¦N¶à×¢ÊÍ£¬¶¼ÊÇ¹Ö·ûºÅ
    vector<double> Theta;
    if (N == 2)
    {
        //% fast estimation
        Pt2d MM;
        MM.X = X1[0].X - X1[1].X;
        MM.Y = X1[0].Y - X1[1].Y;
        double detMM = MM.X * MM.X + MM.Y * MM.Y;
        Pt2d MMi;
        MMi.X = MM.X / detMM;
        MMi.Y = MM.Y / detMM;
        Pt2d Delta;
        Delta.X = X2[0].X - X2[1].X;
        Delta.Y = X2[0].Y - X2[1].Y;
        Theta.clear();
        Theta.push_back( MMi.X * Delta.X + MMi.Y * Delta.Y );
        Theta.push_back( MMi.X * Delta.Y - MMi.Y * Delta.X );
        Theta.push_back( X2[1].X - Theta[0] * X1[1].X + Theta[1] * X1[1].Y );
        Theta.push_back( X2[1].Y - Theta[0] * X1[1].Y - Theta[1] * X1[1].X );
    }
    else
    {
        CvMat* A = cvCreateMat( 2 *N, 4, CV_64F );
        CvMat* b = cvCreateMat( 2 *N, 1, CV_64F );
        Pt2d tmppt2d;
        for( int n = 0; n < N; n++ )
        {
            tmppt2d = X1[n];
            cvmSet( A, 2 * n, 0, tmppt2d.X );
            cvmSet( A, 2 * n, 1, -tmppt2d.Y );
            cvmSet( A, 2 * n, 2, 1 );
            cvmSet( A, 2 * n, 3, 0 );
            cvmSet( A, 2 * n + 1, 0, tmppt2d.Y );
            cvmSet( A, 2 * n + 1, 1, tmppt2d.X );
            cvmSet( A, 2 * n + 1, 2, 0);
            cvmSet( A, 2 * n + 1, 3, 1);
            tmppt2d = X2[n];
            cvmSet( b, 2 * n, 0, tmppt2d.X );
            cvmSet( b, 2 * n + 1, 0, tmppt2d.Y );
        }

        //% solve the linear system in a least square sense
        CvMat* C= cvCreateMat( 4, 1, CV_64F );
        cvSolve( A, b, C);        //Theta = A\b;
        cvMat2vec( C, Theta );
        cvReleaseMat( &A );
        cvReleaseMat( &b );
        cvReleaseMat( &C );
    }
    CvMat* hh = cvCreateMat( 3, 3, CV_64F );
    cvmSet( hh, 0, 0, Theta[0] );
    cvmSet( hh, 0, 1, -Theta[1] );
    cvmSet( hh, 0, 2, Theta[2] );
    cvmSet( hh, 1, 0, Theta[1] );
    cvmSet( hh, 1, 1, Theta[0] );
    cvmSet( hh, 1, 2, Theta[3] );
    cvmSet( hh, 2, 0, 0.0 );
    cvmSet( hh, 2, 1, 0.0 );
    cvmSet( hh, 2, 2, 1.0 );
    //% de-normalize the parameters
    CvMat* tmpT2HT1 = cvCreateMat( 3, 3, CV_64F );
    if ( normalization )
    {
        CvMat* tmpT2 = cvCreateMat( 3, 3, CV_64F );
        vec2cvMat( T2, tmpT2, 3, 3 );
        CvMat* tmpT2H = cvCreateMat( 3, 3, CV_64F );
        cvSolve( tmpT2, hh, tmpT2H );//H = T2\H;
        CvMat* tmpT1 = cvCreateMat( 3, 3, CV_64F );
        vec2cvMat( T1, tmpT1, 3, 3 );
        cvMatMul( tmpT2H, tmpT1, tmpT2HT1 );//H = T2\H*T1;
        cvReleaseMat(&tmpT2);
        cvReleaseMat(&tmpT2H);
        cvReleaseMat(&tmpT1);
    }
    double tmp = cvmGet( tmpT2HT1, 2, 2 );
    for( int i = 0; i < 3; i++ )
    {
        for( int j = 0; j < 3; j++ )
        {
            H.push_back( cvmGet( tmpT2HT1, i, j ) / tmp );
        }
    }
    cvReleaseMat(&hh);
    cvReleaseMat(&tmpT2HT1);
    return true;
}
bool RSTLS( vector<double> &H, double &s, double &phi, vector<double> &T, vector<Pt2d> X1, vector<Pt2d> X2, bool normalization = true )//Î´²âÊÔ
{
    RSTLS( H, X1, X2, normalization );

    s = sqrt( H[0] * H[0] + H[3] * H[3] );
    phi = atan2(H[3], H[0]);
    T.clear();
    T.assign( H.begin(),H.begin() + 6 );
    return true;
}
bool estimate_RST( vector<double> &Theta, int &k, vector<MatchPts> &X, vector<int> &s )
{
    int num;
    k = 2;
    if( X.empty() )
    {
        Theta.clear();
        return true;
    }
    int n = s.size();
    if( n < k )
    {
        printf("Error:estimate_RST:inputError,\nAt least 2 point correspondences are required.\n");
        return false;
    }
    //std::vector<cv::Point2f> Lpts,Rpts;
    vector<Pt2d> Lpts, Rpts;
    Pt2d tmppt2d;
    if( (!s.empty())&&(!X.empty()) )
    {
        vector<MatchPts> tmpX;
        for( int i = 0; i < s.size(); i++)
        {
            num = s[i];
            tmpX.push_back(X[num]);
        }
        X.clear();
        for( int i = 0; i < tmpX.size(); i++ )
        {
            MatchPts tmp = tmpX[i];
            X.push_back( tmp );
            tmppt2d.X = tmp.Lpt.X;
            tmppt2d.Y = tmp.Lpt.Y;
            Lpts.push_back(tmppt2d);
            tmppt2d.X = tmp.Rpt.X;
            tmppt2d.Y = tmp.Rpt.Y;
            Rpts.push_back(tmppt2d);
        }
    }
    //cv::Mat H=cv::Mat(3, 3, CV_64F);
    //H = cv::findHomography(cv::Mat(Lpts), cv::Mat(Rpts) ,CV_RANSAC);
    vector<double> H;
    RSTLS( H, Lpts, Rpts );
    Theta.push_back(H[0]);
    Theta.push_back(H[3]);
    Theta.push_back(H[2]);
    Theta.push_back(H[5]);

    return true;
}
bool get_minimal_sample_set( vector<int> &s, vector<double> &Theta_hat, int k, vector<MatchPts> X, vector<double> P_s,vector<int> ind_tabu, bool best_fun = false, bool bvalidateMSS_fun = false )
{
    s.clear();
    Theta_hat.clear();
    int N = X.size();
    //% remove tabu elements
    vector<int> ind;
    if (!ind_tabu.empty())
    {
        for( int i = 0; i < N; i++ )
        {
            for(int j = 0; j < ind_tabu.size(); j++ )
            {
                if( ind_tabu[j] == i )
                {
                    break;
                }
                ind.push_back(i);
            }
        }
    }
    else
    {
        for( int i = 0; i < N; i++ )
        {
            ind.push_back(i);
        }
    }
    int NN = ind.size();
    //% get the seed for the random number generator
    //% if we have an estimation function then loop until the MSS actually
    //% produces an estimate
    while(true)
    {
        //    % update the seed
        if ( RANSAC_TWISTER_STATE_UPDATED != Nodata )
        {
            RANSAC_TWISTER_STATE_UPDATED = RANSAC_TWISTER_STATE_UPDATED + 1;
        }
        //    % uniform sampling
        vector<bool> mask;
        if( P_s.empty() )
        {
            //% uniform sampling
            get_rand( mask, k, NN, RANSAC_TWISTER_STATE_UPDATED );
        }
        else//Î´²âÊÔ
        {
            //% probabilistic sampling
            vector<double> P_ss;
            for( int i = 0; i < ind.size(); i++ )
            {
                P_ss.push_back(ind[i]);
            }
            get_rand_prob( mask, k, P_ss, RANSAC_TWISTER_STATE_UPDATED );
        }
        for( int i = 0; i < mask.size(); i++ )
        {
            if( mask[i] == 1 )
            {
                s.push_back(ind[i]);
            }
            else
            {
                continue;
            }
        }
        //% check if we are done
        if (best_fun == false)//best_funÓÃÀ´±ê¼ÇÊÇ·ñÊ¹ÓÃest¡ª¡ªfun¹À¼Æº¯ÊýÀ´¹À¼ÆTheta£¬µ±est¡ª¡ªfunÑ¡ÏîÎª¿ÕÊ±£¬best¡ª¡ªfunÎªfalse
        {
            Theta_hat.clear();
            break;
        }
        if( (bvalidateMSS_fun ==true) && !validateMSS_foo(X, s) )
        {
            continue;
        }
        //% estimate the parameter and the residual error
        estimate_RST( Theta_hat, k, X, s );
        if (!Theta_hat.empty())
        {
            break;
        }
    }
    return true;
}
bool loadXLUT(char* spath,vector<xLUT> & x_LUT)
{
    xLUT tmpx;
    std::ifstream stmEo( spath );
    if(stmEo)
    {
        while( !stmEo.eof() )/////¼ÆËãÃÜ¼¯Æ¥ÅäµãµÄ¸öÊý
        {
            //stmEo>>tmpx.x1>>tmpx.x2>>tmpx.x3>>tmpx.x4>>tmpx.x5>>tmpx.x6>>tmpx.x7>>tmpx.x8;
            stmEo>>tmpx.x[0]>>tmpx.x[1]>>tmpx.x[2]>>tmpx.x[3]>>tmpx.x[4]>>tmpx.x[5]>>tmpx.x[6]>>tmpx.x[7];
            x_LUT.push_back(tmpx);
        }
        x_LUT.pop_back();
    }
    else
    {
        printf( "Fail to open x_LUT file!\n" ) ;
    }
    stmEo.close();
    return true;
}
bool loadPLUT(char* spath,vector<double> & p_LUT)
{
    double tmpp;
    std::ifstream stmp( spath );
    if(stmp)
    {
        while( !stmp.eof() )/////¼ÆËãÃÜ¼¯Æ¥ÅäµãµÄ¸öÊý
        {
            stmp>>tmpp;
            p_LUT.push_back(tmpp);
        }
        p_LUT.pop_back();
    }
    else
    {
        printf( "Fail to open p_LUT file!\n" ) ;
    }
    stmp.close();
    return true;
}
bool chi2inv_LUT( double p, int v, double &dValRes )
{
    vector<xLUT> x_LUT;
    vector<double> p_LUT;
    vector<int> v_LUT;
    vector<Pt2d> delta_p;
//    if( ( false == loadXLUT("x_LUT.txt",x_LUT) ) || ( false ==  loadPLUT("p_LUT.txt",p_LUT) ) )
//    {
//        return false;
//    }
    vector<Pt2i> delta_v;
    Pt2i tmpPt2i;
    Pt2d tmpPt2d;
    for( int i = 0; i < 8; i++ )
    {
        v_LUT.push_back(i+1);
        tmpPt2i.X = abs(v - (i+1));
        tmpPt2i.Y = i;
        delta_v.push_back( tmpPt2i );
    }
    std::sort( delta_v.begin(), delta_v.end(),cmppt2i );
    for( int i = 0; i < 512; i++ )
    {
        tmpPt2d.X = abs( p - dP_LUT[i] );
        tmpPt2d.Y = i;
        delta_p.push_back( tmpPt2d );
    }
    std::sort( delta_p.begin(), delta_p.end(), cmppt2d );
    Pt2i tmpPt2i1,tmpPt2i2;
    Pt2d tmpPt2d1,tmpPt2d2;
    tmpPt2i1 = delta_v[0];
    int v1 = v_LUT[tmpPt2i1.Y];
    tmpPt2i2 = delta_v[1];
    int v2 = v_LUT[tmpPt2i2.Y];
    tmpPt2d1 = delta_p[0];
    double p1 = dP_LUT[int(tmpPt2d1.Y+0.1)];
    tmpPt2d2 = delta_p[1];
    double p2 = dP_LUT[int(tmpPt2d2.Y+0.1)];

    //xLUT tmpxlut;
    double *tmpxlut = &dX_LUT[int(tmpPt2d1.Y + 0.1)][0];
    double x_11 = tmpxlut[tmpPt2i1.Y];
    double x_12 = tmpxlut[tmpPt2i2.Y];
    tmpxlut = &dX_LUT[int(tmpPt2d2.Y+0.1)][0];
    double x_21 = tmpxlut[tmpPt2i1.Y];
    double x_22 = tmpxlut[tmpPt2i2.Y];
    //% bilinear interpolation
    double f1 = (p2-p)/(p2-p1);
    double f2 = (p-p1)/(p2-p1);
    double x_1 = f1*x_11 + f2*x_21;
    double x_2 = f1*x_12 + f2*x_22;
    dValRes = (v2-v)/(v2-v1)*x_1 + (v-v1)/(v2-v1)*x_2;

    return true;
}
bool sub_error_RST(vector<double> &Theta, vector<MatchPts> &X, double sigma, double P_inlier, vector<double> &E)
{
    if( (!Theta.empty()) && (!X.empty()) )
    {
        double det = Theta[0] * Theta[0] + Theta[1] * Theta[1];
        MatchPts tmpPts;
        Pt2d tmp12,tmp21;
        double dx, dy, tmpval1, tmpval2;
        for( int i = 0; i < X.size(); i++ )
        {
            tmpPts = X[i];
            dx = tmpPts.Rpt.X - Theta[2];
            dy = tmpPts.Rpt.Y - Theta[3];
            tmp12.X = Theta[0] * tmpPts.Lpt.X - Theta[1] * tmpPts.Lpt.Y + Theta[2];
            tmp12.Y = Theta[1] * tmpPts.Lpt.X + Theta[0] * tmpPts.Lpt.Y + Theta[3];
            tmp21.X = ( Theta[0] * dx + Theta[1] * dy ) / det;
            tmp21.Y = ( -Theta[1] * dx + Theta[0] * dy ) / det;
            tmpval1 = (tmpPts.Rpt.X - tmp12.X) * (tmpPts.Rpt.X - tmp12.X)+(tmpPts.Rpt.Y - tmp12.Y) * (tmpPts.Rpt.Y - tmp12.Y);
            tmpval2 = (tmpPts.Lpt.X - tmp21.X) * (tmpPts.Lpt.X - tmp21.X)+(tmpPts.Lpt.Y - tmp21.Y) * (tmpPts.Lpt.Y - tmp21.Y);
            E.push_back( tmpval1 + tmpval2 );
        }
    }
    return true;
}
bool error_RST(vector<double> &Theta, vector<MatchPts> &X, double sigma, double P_inlier, vector<double> &E,double &T_noise)
{
    //¸Ãº¯ÊýÊÇerror¡ª¡ªRSTµÄ×Óº¯Êý£¬ÓÃÓÚÔÚnargout == 1,¼´²»ÐèÒªÇóT-noiseÊ±Ê¹ÓÃ
    sub_error_RST(Theta, X, sigma, P_inlier, E);
    //ompute the error threshold
    if (abs(P_inlier) < 0.00000000001)
    {
        T_noise = sigma;
    }
    else
    {
//        % Assumes the errors are normally distributed. Hence the sum of
//        % their squares is Chi distributed (with 4 DOF since the symmetric
//        % distance contributes for two terms and the dimensionality is 2)//
//        % compute the inverse probability
        double dValRes = 0;
        if( false == chi2inv_LUT(P_inlier, 4, dValRes ) )
        {
            return false;
        }
        T_noise = sigma * sigma * dValRes;
    }
    return true;
}
bool get_consensus_set(vector<MatchPts> &X, vector<double> &Theta_hat, double &T_noise_squared, vector<double> &E, vector<bool>& CS, bool bman_fun = true )
{
    //% calculate the errors over the entire data set
    E.clear();
    CS.clear();
    if(bman_fun)
    {
        sub_error_RST(Theta_hat,X,0.0,0.0,E);
    }
    //% find the points within the error threshold
    for(int i = 0; i < E.size(); i++ )
    {
        if( E[i] <= T_noise_squared)
        {
            CS.push_back(true);
        }
        else
        {
            CS.push_back(false);
        }
    }
    return true;
}
double get_consensus_set_cost(vector<double> &E, double T_noise_squared, int mode = 0)
{
//% Using a re-descending M-estimator the inliers are scored according to their
//% fitness to the model while the outilers are still given a constant weight
    double J = 0.0;
    int ind = 0;
    int N =E.size();
    vector<double> rho;
    double T_noise = sqrt(T_noise_squared);
    switch (mode)
    {
    case 0 :
        //% Torr
        rho.assign(N,T_noise_squared);
        for(int i = 0; i < E.size(); i++ )
        {
            if(E[i] <= T_noise_squared)
            {
                rho[i] = E[i];
                ind++;
                J += rho[i];
            }
            else
            {
                J += rho[i];
                continue;
            }
        }
        J = J/ind;
        break;
    case 1 :
        //% Huber
        rho.assign(N,0.0);
        for(int i = 0; i < E.size(); i++ )
        {
            if(E[i] <= T_noise_squared)
            {
                rho[i] = 0.5 * E[i];
                ind++;
                J += rho[i];
            }
            else
            {
                rho[i] = T_noise * ( sqrt(E[i]) - 0.5 * T_noise );
                J += rho[i];
            }
        }
        J = J/ind;
        break;
    default :
        printf("Unknown M-estimator!\n");
        break;
    }
    return J;
}
bool get_q_RANSAC(int N, int N_I, int k, double &q, vector<int> &num, vector<int> &den )
{
    if ( k > N_I )
    {
        printf("k should be less or equal than N_I\n");
        return false;
    }
    if ( N == N_I )
    {
        q = 1;
        return true;
    }
    q = 1.0;
    for( int i = 0; i < k; i++ )
    {
        num.push_back( N_I - i );
        den.push_back( N - i );
        q = q * ( N_I - i ) / ( N - i );
    }
    return true;
}
bool get_iter_RANSAC( double epsilon, double q, int &T_iter )
{
    if( (1 - q) > 1e-12 )
    {
        T_iter = ceil( log(epsilon) / log(1 - q) );
    }
    else
    {
        T_iter = 0;
    }
    return true;
}
bool RANSAC_FUN( RanRes &res, vector<MatchPts> &X, RanOps &ops )
{
    //% Initializations
    if( ops.verbose )
    {
        printf( "\nStarting RANSAC!\n" );
        if( ops.fix_seed )
        {
            printf( "random number generator seed is fixed" );
        }
    }
    //Start Timer tic;
    //% get minimal subset size and model codimension
    vector<double> dummy;
    int k = 2;//[dummy, k] = feval(ops.est_fun, []);
    if (ops.verbose)
    {
        printf( "\nMinimal sample set dimension = %d", k );
    }
    //% total number of elements
    int N = X.size();
    //% exit if the number of points is smaller than the cardinality of a MSS
    if (N < k)
    {
        printf( "\nRANSACToolbox:dataSetTooSmall,The input data set is composed by too few elements.\n");
        return false;
    }
    vector<double> Theta;
    double T_noise_squared;
    if ( ops.T_noise_squared < 0 )
    {
        //% get the noise threshold via Chi squared distribution
        error_RST( Theta, X, ops.sigma, ops.P_inlier, dummy, T_noise_squared );
        ops.T_noise_squared = T_noise_squared;
        if ( ops.verbose )
        {
            printf( "\nSquared noise threshold = %f, (assuming Gaussian noise, for sigma = %f)", T_noise_squared, ops.sigma);
        }
    }
    else
    {
        //% set a hard noise threshold
        T_noise_squared = ops.T_noise_squared;
        if ( ops.verbose )
        {
            printf( "\nSquared noise threshold = %f", T_noise_squared);
        }
    }
    //% Randomization
    if (!ops.fix_seed)
    {
        srand( 100.0 * (unsigned)time(NULL) );// rand('twister',sum(100*clock));
    }
    //global RANSAC_TWISTER_STATE;
    //global RANSAC_TWISTER_STATE_UPDATED;
    if ( ops.fix_seed )
    {
        RANSAC_TWISTER_STATE_UPDATED = RANSAC_TWISTER_STATE;
    }
    else
    {
        RANSAC_TWISTER_STATE_UPDATED = Nodata;
    }
    //% Main loop% some initializations
    int N_I_star = k;
    double J_star = Inf;
    vector<bool> CS_star( N, false );
    vector<int> ind_CS_star;
    vector<double> Theta_star;
    //% number of iterations
    int iter = 0;
    //% threshold on the number of iterations
    int T_iter = ops.max_iters;
    //% number of iterations with no updates
    int no_updates = 0;
    bool notify,update_sets,update_T_iter;
    vector<int> MSS;
    vector<double> E,E_star;
    vector<bool> CS;
    double q,J;
    int N_I = 0;
    vector<int> ind_CS;
    while ( (iter <= ops.min_iters) || ( (iter <= T_iter) && (iter <= ops.max_iters) && (no_updates <= ops.max_no_updates) ) )
    {
        if(iter == 999)
        {
            iter = iter;
        }
        //% update the number of iterations
        iter = iter + 1;
        //% initialize flags
        if( ( ops.notify_iters != 0 ) && ( (iter/ops.notify_iters) == (int)(iter/ops.notify_iters) ) )
        {
            notify = true;
        }
        else
        {
            notify = false;
        }
        update_sets = false;
        update_T_iter = false;
        //% Hypothesize ---------------------------------------------------------
        //% select MSS
        get_minimal_sample_set( MSS, Theta, k, X, ops.Ps,ops.ind_tabu, ops.best_fun, ops.bvalidateMSS_fun );

       //% validate the parameter vector Theta
        if( ops.bvalidateTheta_fun  && validateTheta_foo( X, Theta, MSS ) )
        {
            continue;
        }
        //% Test ----------------------------------------------------------------

        //% find the CS

        get_consensus_set( X, Theta, T_noise_squared, E, CS, ops.bman_fun );
        //% get the cost of the CS
        J = get_consensus_set_cost( E, T_noise_squared);
        //% get the indices
        ind_CS.clear();
        for( int i = 0; i < CS.size(); i++ )
        {
            if( CS[i] )
            {
                ind_CS.push_back(i);
            }
            else
            {
                continue;
            }
        }
        //% get the estimated number of inliers
        N_I = ind_CS.size();
        //% Update --------------------------------------------------------------
        if( ops.mode == RANSAC )
        {
            //% check if we have a tie
            if ( N_I == N_I_star )
            {
                //% if the cost has decreased then update the inlier set
                if ( J < J_star )
                {
                    J_star = J;
                    notify = true;
                    update_sets = true;
                    if (ops.verbose)
                    {
                        printf(".");
                    }
                }
            }
            //% if we found a larger inlier set update both the inlier set and the number of iterations
            if ( N_I > N_I_star )
            {
                notify = true;
                update_sets = true;
                update_T_iter = true;
            }
        }
        else if( ops.mode == MSAC )
        {
            //% if the cost has decreased then update the inlier set
            if ( ((N_I >= k) && (J < J_star) )|| ((J == J_star) && (N_I > N_I_star) ) )
            {
                J_star = J;
                notify = true;
                update_sets = true;
                if ( N_I > N_I_star )
                {
                    update_T_iter = true;
                }
            }
        }
        else
        {
            printf( "options's mode not found!\n" );
        }
        //% update the sets
        if( update_sets )
        {
            Theta_star.clear();
            Theta_star.assign( Theta.begin(), Theta.end() );
            CS_star.clear();
            CS_star.assign( CS.begin(), CS.end() );
            E_star.clear();
            E_star.assign( E.begin(), E.end() );
            ind_CS_star.clear();
            ind_CS_star.assign( ind_CS.begin(),ind_CS.end() );
            N_I_star = N_I;
//        % [E_star, CS_star]   = get_consensus_set(X, Theta_star, T_noise_squared, options.man_fun);
//        % J_star              = get_consensus_set_cost(E_star, T_noise_squared);
//        % ind_CS_star         = find(CS_star);
//        % N_I_star            = length(ind_CS_star);
            no_updates = 0;
        }
        else
        {
            no_updates = no_updates + 1;
        }
        //% update the number of iterations
        vector<int> num,den;
        if ( update_T_iter )
        {
            get_q_RANSAC( N, N_I_star, k, q, num, den );
            if ( q > 10e-12 )
            {
                get_iter_RANSAC( ops.epsilon, q, T_iter );
            }
        }

        if (ops.verbose)
        {
            if ( update_T_iter || update_sets || notify )
            {
                printf("\nIteration = %5d/%9d.", iter, T_iter);
                printf("Inliers = %6d/%6d (cost is J = %8.8f)", N_I_star, N, J_star);
            }
        }
        //% if all the points have been assigned then exit the loop
        if ( ind_CS_star.size() == N )
        {
            break;
        }
    }
    if (ops.reestimate)
    {
        if (ops.verbose)
        {
            printf("\nRestimating the parameter vector... \n");
        }
        vector<MatchPts> tmpX;
        vector<int> s;
        int tmpint;
        for(int i = 0; i < CS_star.size(); i++ ) //Theta_star = feval(options.est_fun, X(:, CS_star));
        {
            tmpint = CS_star[i];
            tmpX.push_back(X[tmpint]);
        }
        estimate_RST( Theta_star, k, tmpX, s );
        E.clear();
        CS_star.clear();
        get_consensus_set( X, Theta_star, T_noise_squared, E, CS_star, ops.bman_fun );
        //[E_star, CS_star] = get_consensus_set(X, Theta_star, T_noise_squared, options.man_fun);
        if (ops.verbose)
        {
            printf("Done");
        }
    }
    //% save the results
    res.Theta = Theta_star;
    res.E.clear();
    res.E.assign( E_star.begin(), E_star.end() );
    res.CS.clear();
    res.CS.assign( CS_star.begin(), CS_star.end() );
    res.T_noise_squared = T_noise_squared;
    res.J = J_star;

    //% perform stabilization
//    if (options.stabilize)
//    {
//        results = stabilize(X, results, options);
//    }
    int CSsum = 0;
    for( int i = 0; i < res.CS.size(); i++ )
    {
        if( CS[i] == 1 )
        {
            CSsum++;
        }
        else
        {
            continue;
        }
    }
    if (ops.verbose)
    {
        printf("\nFinal number of inliers = %d/%d\n", CSsum, N );
    }
    //results.time = toc;
    //if (options.verbose)
    //    fprintf('\nConverged in %d iterations (%f seconds)\n', iter, results.time);
    //end;


    return true;
}
bool LoadPtsFile( char* spath, vector<MatchPts> &X )
{
    MatchPts tmpp;
    std::ifstream stmp( spath );
    if(stmp)
    {
        while( !stmp.eof() )
        {
            stmp>>tmpp.Lpt.X>>tmpp.Lpt.Y>>tmpp.Rpt.X>>tmpp.Rpt.Y;
            X.push_back(tmpp);
        }
        X.pop_back();
    }
    else
    {
        printf( "Fail to load Points file!\n" ) ;
    }
    stmp.close();
    return true;
}
bool WritePtsFile(char* spath, vector<MatchPts> &X)
{
    MatchPts tmpp;
    std::ofstream stmp( spath );
    for( int i = 0; i < X.size(); i++ )
    {
        tmpp = X[i];
        stmp<<tmpp.Lpt.X<<" "<<tmpp.Lpt.Y<<" "<<tmpp.Rpt.X<<" "<<tmpp.Rpt.Y<<"\n";
    }
    stmp.close();
    return true;
}


bool getRanSacPts( vector<double> vecXL, vector<double> vecYL, vector<double> vecXR, vector<double> vecYR, vector<bool> &vecFlags, double dSigma, double dMinItera )
{
    int nPtNum = vecXL.size();
    if( ( nPtNum == 0 ) ||( nPtNum != vecYL.size() ) ||( nPtNum != vecXR.size() ) ||( nPtNum != vecYR.size() ) )
    {
        return false;
    }
    vecFlags.clear();

    RanRes res;

    RanOps ops;
    ops.sigma = dSigma;
    ops.min_iters = dMinItera;

    vector<MatchPts> vecMPts;
    for( int i = 0; i < nPtNum; ++i )
    {
        MatchPts ptMatch;
        ptMatch.Lpt.X = vecXL[i];
        ptMatch.Lpt.Y = vecYL[i];
        ptMatch.Rpt.X = vecXR[i];
        ptMatch.Rpt.Y = vecYR[i];
        vecMPts.push_back( ptMatch );
    }
    if( false == RANSAC_FUN(res,vecMPts,ops) )
    {
        return false;
    }
    vecFlags = res.CS;
    return true;
}
//
//int main()
//{
//    vector<MatchPts> X;
//    LoadPtsFile( "data/match-upback.txt", X );
//    int tt = X.size();
//    RanRes res;
//    RanOps ops;
//    RANSAC_FUN(res,X,ops);
//    vector<MatchPts> resX;
//    for( int i = 0; i < res.CS.size(); i++ )
//    {
//        if(res.CS[i] == 1)
//        {
//            resX.push_back(X[i]);
//        }
//    }
//    WritePtsFile( "data/ResultPts.txt", resX );
//
//    return 0;
//}
int getRanSacPtsVT( double* pPtData , int nPtNum, bool** pbData, double dSigma, double dMinItera  )
{
	
	if( ( nPtNum == 0 ) )
	{
		return false;
	}
	

	RanRes res;

	RanOps ops;
	ops.sigma = dSigma;
	
	
	int nMaxIter = nPtNum * nPtNum;
	if ( nMaxIter > 10000 )
	{
		nMaxIter = 10000;
	}
	if ( dMinItera > nMaxIter )
	{
		nMaxIter = dMinItera;
	}
	ops.min_iters = dMinItera;
	ops.max_iters = nMaxIter;	

	vector<MatchPts> vecMPts;
	for( int i = 0; i < nPtNum; ++i )
	{
		MatchPts ptMatch;
		ptMatch.Lpt.X = pPtData[4*i];
		ptMatch.Lpt.Y = pPtData[4*i+1];
		ptMatch.Rpt.X = pPtData[4*i+2];
		ptMatch.Rpt.Y = pPtData[4*i+3];
		vecMPts.push_back( ptMatch );
	}
	if( false == RANSAC_FUN(res,vecMPts,ops) )
	{
		return false;
	}
	vector<bool> vecFlags;
	vecFlags = res.CS;


	//----------------------------------------------------------
	*pbData = new bool[vecFlags.size()];
	for ( int i = 0; i <vecFlags.size(); ++i )
	{
		(*pbData)[i] = vecFlags[i];
	}
	return vecFlags.size();
	
}
void FreeRansacPtr( bool **pbData )
{
	if ( *pbData != NULL )
	{
		delete[] *pbData;
		*pbData = NULL;
	}	
}



